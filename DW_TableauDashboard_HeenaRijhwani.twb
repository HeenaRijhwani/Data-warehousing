<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1108.0821                               -->
<workbook original-version='18.1' source-build='2022.3.1 (20223.22.1108.0821)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='sales2+ (Olist)' inline='true' name='federated.0yhksbr0d586o61a145mw1u0npoj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0vulbdq01tra830zkqu0h15vbef0'>
            <connection authentication='username-password' class='postgres' dbname='Olist' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='category' table='[public].[category]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='sales2' table='[public].[sales2]' type='table' />
          <relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='category' table='[public].[category]' type='table' />
          <relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='month' table='[public].[month]' type='table' />
          <relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='seller_dim' table='[public].[seller_dim]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[avg_sales_price]' value='[sales2].[avg_sales_price]' />
          <map key='[category_id (category)]' value='[category].[category_id]' />
          <map key='[category_id]' value='[sales2].[category_id]' />
          <map key='[month]' value='[month].[month]' />
          <map key='[month_id (month)]' value='[month].[month_id]' />
          <map key='[month_id]' value='[sales2].[month_id]' />
          <map key='[product_category_name]' value='[category].[product_category_name]' />
          <map key='[quarter]' value='[month].[quarter]' />
          <map key='[sales_qty]' value='[sales2].[sales_qty]' />
          <map key='[seller_city]' value='[seller_dim].[seller_city]' />
          <map key='[seller_id (seller_dim)]' value='[seller_dim].[seller_id]' />
          <map key='[seller_id]' value='[sales2].[seller_id]' />
          <map key='[seller_state]' value='[seller_dim].[seller_state]' />
          <map key='[total_sales_price]' value='[sales2].[total_sales_price]' />
          <map key='[year]' value='[month].[year]' />
          <map key='[zipcode]' value='[seller_dim].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>seller_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller_id]</local-name>
            <parent-name>[sales2]</parent-name>
            <remote-alias>seller_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sales2_A018A86E758542B5BB19C78332C0937D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[sales2]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sales2_A018A86E758542B5BB19C78332C0937D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month_id]</local-name>
            <parent-name>[sales2]</parent-name>
            <remote-alias>month_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sales2_A018A86E758542B5BB19C78332C0937D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sales_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sales_price]</local-name>
            <parent-name>[sales2]</parent-name>
            <remote-alias>avg_sales_price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sales2_A018A86E758542B5BB19C78332C0937D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[sales2]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sales2_A018A86E758542B5BB19C78332C0937D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_sales_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_sales_price]</local-name>
            <parent-name>[sales2]</parent-name>
            <remote-alias>total_sales_price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sales2_A018A86E758542B5BB19C78332C0937D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[category_id (category)]</local-name>
            <parent-name>[category]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[category_65E222F7CD9D48EFB8C01A21605124B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_category_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_category_name]</local-name>
            <parent-name>[category]</parent-name>
            <remote-alias>product_category_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[category_65E222F7CD9D48EFB8C01A21605124B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month_id (month)]</local-name>
            <parent-name>[month]</parent-name>
            <remote-alias>month_id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[month_D221A2BF37A74152B7E8FD4CBA00AE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[month]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[month_D221A2BF37A74152B7E8FD4CBA00AE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>131</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[month]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[month_D221A2BF37A74152B7E8FD4CBA00AE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[month]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[month_D221A2BF37A74152B7E8FD4CBA00AE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller_id (seller_dim)]</local-name>
            <parent-name>[seller_dim]</parent-name>
            <remote-alias>seller_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seller_dim_C396418E327D4287A0145CE38CACDA49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>131</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[seller_dim]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seller_dim_C396418E327D4287A0145CE38CACDA49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller_city]</local-name>
            <parent-name>[seller_dim]</parent-name>
            <remote-alias>seller_city</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seller_dim_C396418E327D4287A0145CE38CACDA49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller_state]</local-name>
            <parent-name>[seller_dim]</parent-name>
            <remote-alias>seller_state</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seller_dim_C396418E327D4287A0145CE38CACDA49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]&quot;' value='Sales' />
          <alias key='&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]&quot;' value='Revenue' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='category' datatype='table' name='[__tableau_internal_object_id__].[category_65E222F7CD9D48EFB8C01A21605124B6]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='month' datatype='table' name='[__tableau_internal_object_id__].[month_D221A2BF37A74152B7E8FD4CBA00AE23]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sales2' datatype='table' name='[__tableau_internal_object_id__].[sales2_A018A86E758542B5BB19C78332C0937D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='seller_dim' datatype='table' name='[__tableau_internal_object_id__].[seller_dim_C396418E327D4287A0145CE38CACDA49]' role='measure' type='quantitative' />
      <column caption='Avg Sales Price' datatype='real' name='[avg_sales_price]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Category Id (Category)' datatype='integer' name='[category_id (category)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Month' datatype='integer' datatype-customized='true' name='[month]' role='dimension' type='quantitative' />
      <column caption='Month Id (Month)' datatype='string' name='[month_id (month)]' role='dimension' type='nominal' />
      <column caption='Month Id' datatype='string' name='[month_id]' role='dimension' type='nominal' />
      <column caption='Product Category Name' datatype='string' datatype-customized='true' name='[product_category_name]' role='dimension' type='nominal' />
      <column caption='Quarter' datatype='integer' datatype-customized='true' name='[quarter]' role='dimension' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Seller City' datatype='string' name='[seller_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;curitiba&quot;' value='cu' />
          <alias key='&quot;ibitinga&quot;' value='ib' />
          <alias key='&quot;ribeirao preto&quot;' value='rp' />
          <alias key='&quot;rio de janeiro&quot;' value='rdj' />
          <alias key='&quot;sao paulo&quot;' value='sp' />
        </aliases>
      </column>
      <column caption='Seller Id (Seller Dim)' datatype='string' name='[seller_id (seller_dim)]' role='dimension' type='nominal' />
      <column caption='Seller Id' datatype='string' name='[seller_id]' role='dimension' type='nominal' />
      <column caption='Seller State' datatype='string' name='[seller_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Sales Price' datatype='real' name='[total_sales_price]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[sales_qty]' derivation='Avg' name='[avg:sales_qty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sales_price]' derivation='Sum' name='[diff:sum:total_sales_price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[product_category_name]' derivation='None' name='[none:product_category_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[seller_city]' derivation='None' name='[none:seller_city:nk]' pivot='key' type='nominal' />
      <column-instance column='[avg_sales_price]' derivation='Sum' name='[sum:avg_sales_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sales_price]' derivation='Sum' name='[sum:total_sales_price:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:seller_city:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;alvorada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;araras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;bandeirantes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;blumenau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;cachoeirinha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;campos dos goytacazes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;catanduva&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;cordilheira alta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;echapora&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;florianopolis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;guaimbe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ilheus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;itapema&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;jaguaruna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;lagoa santa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;mairinque&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;mineiros do tiete&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;natal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;osvaldo cruz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pedregulho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ponta grossa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;resende&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;robeirao preto&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;santa rosa de viterbo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sao joao de meriti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sao paulo - sp&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;serrana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;teixeira soares&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ubatuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;vicosa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;04482255&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;aperibe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;auriflama/sp&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bebedouro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;brasilia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;campinas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;carmo da mata&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;conchal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;descalvado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;feira de santana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;garca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;horizontina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;irati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ivoti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;joinville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;londrina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;massaranduba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;monte siao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;novo hamburgo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;paranavai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pinhalzinho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;praia grande&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rio de janeiro / rio de janeiro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;santa barbara d´oeste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sao bento do sul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sao ludgero&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;saquarema&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tabao da serra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tres coroas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;varzea paulista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;alambari&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;araguari&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;bage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;bento goncalves&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;brusque&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;campo largo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cascavel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;congonhas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;domingos martins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ferraz de vasconcelos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gaspar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;itaipulandia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;jaci&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;juzeiro do norte&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;luziania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;mesquita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;morrinhos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;oliveira&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;patos de minas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pitangueiras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;presidente prudente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rio do sul&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;santa maria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;sao carlos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;sao paluo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;scao jose do rio pardo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;tanabi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;triunfo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;vespasiano&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;anapolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;armacao dos buzios&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;barra mansa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bom jardim&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cajamar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;canoinhas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cerqueira cesar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cotia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;entre rios do oeste&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;fortaleza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;guara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;imbituva&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;itaporanga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;japira&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;laranjal paulista&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mandaguacu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mogi das cruses&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;nilopolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;paincandu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pelotas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;porto belo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ribeirao preto / sao paulo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ronda alta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;santo andre&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sao jose do rio pardo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sao pauo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;socorro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;tiete&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;uniao da vitoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;vitoria de santo antao&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;curitiba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;americana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;araucaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;barbacena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;bocaiuva do sul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;cachoeiro de itapemirim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;campos novos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;caucaia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;cornelio procopio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;embu das artes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;formiga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;guaira&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ilicinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;itapetininga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;jales&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;laguna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;mairipora&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;mirandopolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;navegantes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ourinhos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pedreira&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ponte nova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ribeirao das neves&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;rodeio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;santa terezinha de goias&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sao joao del rei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sao paulo / sao paulo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sertanopolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;teresina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;uberaba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;videira&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;alfenas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;arapongas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;bahia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;bertioga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;buritama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;campo limpo paulista&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;castro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;conselheiro lafaiete&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;dores de campos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;floranopolis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;goiania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;icara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;itajai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;jaciara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;lages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;macae&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;messias targino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;mucambo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;orlandia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;paulinia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;poa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;queimados&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;rio grande&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;santa maria da serra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;sao  paulo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;sao francisco do sul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;serra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;taruma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tubarao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;viamao&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;sao paulo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;aparecida&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;atibaia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;batatais&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;braco do norte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;campina das missoes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;cariacica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;colombo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;farroupilha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fronteira&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;guarulhos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ipe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;itirapina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;joao pessoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;limeira&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;marilia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;monte alegre do sul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;nova petropolis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;paraiso do sul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pinhais/pr&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pradopolis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;rio das pedras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;santa barbara d oeste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;santos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sao jose dos pinhas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sao vicente&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sumare&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;torres&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;varginha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;abadia de goias&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;apucarana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;avare&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;belford roxo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;brasilia df&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;campo bom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;carmo do cajuru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;concordia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;diadema&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;fernando prestes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;garopaba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;hortolandia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;irece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;jaboticabal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;juiz de fora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;lorena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;mateus leme&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;monteiro lobato&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;novo hamburgo, rio grande do sul, brasil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;parnamirim&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;piracicaba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;presidente bernardes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;rio de janeiro \\rio de janeiro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;santa catarina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sao bernardo do campo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sao luis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sarandi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tabatinga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tres de maio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;vassouras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;angra dos reis rj&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;arvorezinha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;barro alto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;borda da mata&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;camboriu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;caratinga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;clementina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;cruzeiro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;eusebio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;francisco morato&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;guariba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ipatinga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;itau de minas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;jau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;leme&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;marialva&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;mogi mirim&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;nova lima&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;parai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pilar do sul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;portoferreira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;rio branco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;santo antonio de padua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sao  jose dos pinhais&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sao sebastiao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;tocantins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;vargem grande do sul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;xanxere&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;almirante tamandare&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ararangua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;balenario camboriu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;betim&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cacador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;campo magro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;castro pires&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;contagem&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;dracena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;flores da cunha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;goioere&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;igaracu do tiete&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;itajobi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;jacutinga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;lages - sc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;macatuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;miguelopolis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;muqui&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;orleans&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;paulo lopes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pocos de caldas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;recife&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rio negrinho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;santa rita do sapucai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;sao goncalo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;serra negra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;tatui&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;tupa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;viana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;andira-pr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;arraial d&apos;ajuda (porto seguro)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;barra velha&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;bom jesus dos perdoes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;california&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;capivari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;chapeco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;coxim&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;erechim&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;foz do iguacu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;guarapuava&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;imigrante&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;itapui&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;jaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;laranjeiras do sul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;mandaguari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;mogi das cruzes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;niteroi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;palhoca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;penapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;porto ferreira&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ribeirao pretp&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;s jose do rio preto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;santo andre/sao paulo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sao jose do rio pret&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sao pedro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;soledade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;timbo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;uruacu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;volta redonda&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;ribeirao preto&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;ibitinga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;andradas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;artur nogueira&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;barretos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bombinhas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;camanducaia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;carapicuiba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cianorte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cravinhos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;estancia velha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;franca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;guaratingueta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;indaial&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;itaquaquecetuba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;jaragua do sul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;laurentino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;mandirituba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;mogi das cruzes / sp&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;nova friburgo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;palotina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;petropolis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;porto seguro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;riberao preto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sabara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;santo angelo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sao jose do rio preto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sao pedro da aldeia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sombrio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;timoteo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;uruguaiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;votorantim&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ao bernardo do campo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;assis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;barueri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;botucatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;campanha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;carazinho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;colatina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;cuiaba&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;extrema&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;franco da rocha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;guaruja&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ipaussu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;itauna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ji parana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;lencois paulista&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;marica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;mombuca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;nova odessa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;paraiba do sul&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pinhais&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pouso alegre&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;rio claro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sando andre&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;santo antonio de posse&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sao jose dos pinhais&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sao sebastiao da grama/sp&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sp / sp&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;toledo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;vargem grande paulista&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;xaxim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;aparecida de goiania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;auriflama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;bauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;braganca paulista&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;campina grande&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cariacica / es&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;colorado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;curitibanos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fazenda rio grande&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;gama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;guiricema&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ipira&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;itu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;joao pinheiro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;loanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;maringa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;monte alto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;nova trento&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;parana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pinhalao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;prados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;santa barbara d&apos;oeste&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sao bento&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sao leopoldo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sapiranga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;suzano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tres coracoes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;varzea alegre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;amparo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;araxa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;barbacena/ minas gerais&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;bofete&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cafelandia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cananeia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;caxias do sul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;coronel fabriciano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;embu guacu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;formosa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;guanambi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;imbe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;itapeva&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;jambeiro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;lajeado&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mamanguape&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mirassol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;neopolis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ouro fino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pedrinhas paulista&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;portao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ribeirao pires&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rolandia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;santa terezinha de itaipu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sao joaquim da barra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sao paulo sp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sete lagoas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;teresopolis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;uberlandia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vila velha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;alvares machado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;araraquara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;balneario camboriu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;birigui&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cachoeira do sul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;campo mourao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cataguases&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cordeiropolis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;duque de caxias&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;floresta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;governador valadares&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;igrejinha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;itapecerica da serra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;jaguariuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;lagoa da prata&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;mage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;minas gerais&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;muriae&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;osasco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pederneiras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pompeia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;registro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;rio verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;santa rosa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;sao joao da boa vista&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;são paulo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;serra redonda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;taubate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;uba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;vicente de carvalho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;afonso claudio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;aracaju&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bady bassitt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;belo horizont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;brejao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;campo do meio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;caruaru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;condor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;divinopolis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fernandopolis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;garulhos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;itabira&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;jacarei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;jundiai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;louveira&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;maua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;novo horizonte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pato bragado&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pirituba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;presidente epitacio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;rio de janeiro, rio de janeiro, brasil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;santa cecilia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sao bernardo do capo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sao miguel d&apos;oeste&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sbc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;taboao da serra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tres rios&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;venancio aires&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;angra dos reis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;aruja&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;barrinha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bonfinopolis de minas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;cambe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;carapicuiba / sao paulo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;claudio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;criciuma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;eunapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;francisco beltrao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;guaratuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;indaiatuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;itatiba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;jarinu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lauro de freitas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;marechal candido rondon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;mogi guacu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;nova iguacu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;paracambi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;picarras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;porto velho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rio bonito&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;salto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;santo antonio da patrulha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sao jose dos campos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sao roque&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sorocaba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;tiradentes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;valinhos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;votuporanga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ampere&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;arinos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bariri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;boituva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;caieiras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;canoas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;centro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cosmopolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;engenheiro coelho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;formosa do oeste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;guanhaes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;imbituba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;itapevi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;janauba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;lambari&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;manaus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;mococa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;nhandeara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pacatuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pedro leopoldo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;porto alegre&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rolante&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;santana de parnaiba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;sao jose&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;sao paulop&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;sinop&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;terra boa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;umuarama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;vitoria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;aguas claras df&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;aracatuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;baependi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;belo horizonte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;brotas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;campo grande&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cascavael&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;congonhal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;dois corregos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ferraz de  vasconcelos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;garuva&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ibirite&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;itaborai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;jacarei / sao paulo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;jussara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;luiz alves&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;maua/sao paulo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;montes claros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;olimpia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pato branco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pitanga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;presidente getulio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rio do oeste&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;santa cruz do sul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;sao caetano do sul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;sao miguel do oeste&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;sbc/sp&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;taio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;treze tilias&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;vendas@creditparts.com.br&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;rio de janeiro&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:product_category_name:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;portateis_cozinha_e_preparadores_de_alimentos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;moveis_colchao_e_estofado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fraldas_higiene&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;seguros_e_servicos&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;construcao_ferramentas_construcao&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;fashion_bolsas_e_acessorios&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;livros_interesse_geral&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;perfumaria&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;relogios_presentes&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;agro_industria_e_comercio&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;automotivo&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;construcao_ferramentas_seguranca&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;fashion_roupa_masculina&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;moveis_cozinha_area_de_servico_jantar_e_jardim&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;sinalizacao_e_seguranca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;cds_dvds_musicais&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pcs&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;artigos_de_natal&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;climatizacao&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;eletroportateis&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;informatica_acessorios&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;instrumentos_musicais&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;papelaria&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;artes_e_artesanato&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;casa_construcao&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;cool_stuff&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;eletrodomesticos_2&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;industria_comercio_e_negocios&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;moveis_sala&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;bebidas&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;construcao_ferramentas_iluminacao&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;fashion_roupa_feminina&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;malas_acessorios&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;portateis_casa_forno_e_cafe&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;alimentos_bebidas&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;brinquedos&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;casa_conforto&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;dvds_blu_ray&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;ferramentas_jardim&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;moveis_escritorio&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;telefonia&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;artigos_de_festas&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;cine_foto&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;eletronicos&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;esporte_lazer&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;musica&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;alimentos&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;beleza_saude&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;fashion_underwear_e_moda_praia&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;tablets_impressao_imagem&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;construcao_ferramentas_jardim&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;fashion_roupa_infanto_juvenil&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;market_place&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;fashion_calcados&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;audio&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;consoles_games&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;livros_importados&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;moveis_decoracao&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;pc_gamer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;la_cuisine&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;bebes&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;construcao_ferramentas_ferramentas&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;fashion_esporte&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;livros_tecnicos&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;pet_shop&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;utilidades_domesticas&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;artes&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;cama_mesa_banho&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;casa_conforto_2&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;eletrodomesticos&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;flores&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;moveis_quarto&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;telefonia_fixa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:avg_sales_price:qk]&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]&quot;</bucket>
            </map>
            <map to='#889296'>
              <bucket>&quot;[federated.0yhksbr0d586o61a145mw1u0npoj]&quot;</bucket>
            </map>
            <map to='#b3b3b3'>
              <bucket>&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[avg:sales_qty:qk]&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[diff:sum:total_sales_price:qk]&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='category' id='category_65E222F7CD9D48EFB8C01A21605124B6'>
            <properties context=''>
              <relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='category' table='[public].[category]' type='table' />
            </properties>
          </object>
          <object caption='month' id='month_D221A2BF37A74152B7E8FD4CBA00AE23'>
            <properties context=''>
              <relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='month' table='[public].[month]' type='table' />
            </properties>
          </object>
          <object caption='sales2' id='sales2_A018A86E758542B5BB19C78332C0937D'>
            <properties context=''>
              <relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='sales2' table='[public].[sales2]' type='table' />
            </properties>
          </object>
          <object caption='seller_dim' id='seller_dim_C396418E327D4287A0145CE38CACDA49'>
            <properties context=''>
              <relation connection='postgres.0vulbdq01tra830zkqu0h15vbef0' name='seller_dim' table='[public].[seller_dim]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[category_id]' />
              <expression op='[category_id (category)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' guaranteed-value='true' object-id='sales2_A018A86E758542B5BB19C78332C0937D' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='category_65E222F7CD9D48EFB8C01A21605124B6' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[month_id]' />
              <expression op='[month_id (month)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' guaranteed-value='true' object-id='sales2_A018A86E758542B5BB19C78332C0937D' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='month_D221A2BF37A74152B7E8FD4CBA00AE23' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[seller_id]' />
              <expression op='[seller_id (seller_dim)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' guaranteed-value='true' object-id='sales2_A018A86E758542B5BB19C78332C0937D' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='seller_dim_C396418E327D4287A0145CE38CACDA49' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Olist' inline='true' name='federated.1lf9wra1mpofx81d4dgqh0c3vy0h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.03xdqba0gm1ovp1b25c6c1qout5f'>
            <connection authentication='username-password' class='postgres' dbname='Olist' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='customer_dim' table='[public].[customer_dim]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='review2' table='[public].[review2]' type='table' />
          <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='customer_dim' table='[public].[customer_dim]' type='table' />
          <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='product_orders4' table='[public].[product_orders4]' type='table' />
          <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='purchased_time_dim' table='[public].[purchased_time_dim]' type='table' />
          <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='date' table='[public].[date]' type='table' />
          <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='product_dim2' table='[public].[product_dim2]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[current_flag]' value='[product_dim2].[current_flag]' />
          <map key='[customer_city]' value='[customer_dim].[customer_city]' />
          <map key='[customer_id (customer_dim)]' value='[customer_dim].[customer_id]' />
          <map key='[customer_id (product_orders4)]' value='[product_orders4].[customer_id]' />
          <map key='[customer_id]' value='[review2].[customer_id]' />
          <map key='[customer_state]' value='[customer_dim].[customer_state]' />
          <map key='[date_day]' value='[date].[date_day]' />
          <map key='[date_id (date)]' value='[date].[date_id]' />
          <map key='[date_id]' value='[review2].[date_id]' />
          <map key='[date_month]' value='[date].[date_month]' />
          <map key='[date_quarter]' value='[date].[date_quarter]' />
          <map key='[date_year]' value='[date].[date_year]' />
          <map key='[effective_timestamp]' value='[product_dim2].[effective_timestamp]' />
          <map key='[expire_timestamp]' value='[product_dim2].[expire_timestamp]' />
          <map key='[height]' value='[product_dim2].[height]' />
          <map key='[length]' value='[product_dim2].[length]' />
          <map key='[prev_customercity]' value='[customer_dim].[prev_customercity]' />
          <map key='[prev_customerstate]' value='[customer_dim].[prev_customerstate]' />
          <map key='[prev_zipcode]' value='[customer_dim].[prev_zipcode]' />
          <map key='[product_dim_id (product_dim2)]' value='[product_dim2].[product_dim_id]' />
          <map key='[product_dim_id (product_orders4)]' value='[product_orders4].[product_dim_id]' />
          <map key='[product_dim_id]' value='[review2].[product_dim_id]' />
          <map key='[product_id]' value='[product_dim2].[product_id]' />
          <map key='[product_photos_qty]' value='[product_dim2].[product_photos_qty]' />
          <map key='[product_price]' value='[product_orders4].[product_price]' />
          <map key='[product_qty]' value='[product_orders4].[product_qty]' />
          <map key='[purchase_clocktime]' value='[purchased_time_dim].[purchase_clocktime]' />
          <map key='[purchase_day]' value='[purchased_time_dim].[purchase_day]' />
          <map key='[purchase_id (purchased_time_dim)]' value='[purchased_time_dim].[purchase_id]' />
          <map key='[purchase_id]' value='[product_orders4].[purchase_id]' />
          <map key='[purchase_month]' value='[purchased_time_dim].[purchase_month]' />
          <map key='[purchase_quarter]' value='[purchased_time_dim].[purchase_quarter]' />
          <map key='[purchase_year]' value='[purchased_time_dim].[purchase_year]' />
          <map key='[review_score]' value='[review2].[review_score]' />
          <map key='[total_price]' value='[product_orders4].[total_price]' />
          <map key='[weight]' value='[product_dim2].[weight]' />
          <map key='[width]' value='[product_dim2].[width]' />
          <map key='[zipcode]' value='[customer_dim].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[review2]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review2_B7024A65E2074B89945FC869A7814166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_dim_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_dim_id]</local-name>
            <parent-name>[review2]</parent-name>
            <remote-alias>product_dim_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review2_B7024A65E2074B89945FC869A7814166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_score</remote-name>
            <remote-type>3</remote-type>
            <local-name>[review_score]</local-name>
            <parent-name>[review2]</parent-name>
            <remote-alias>review_score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review2_B7024A65E2074B89945FC869A7814166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date_id]</local-name>
            <parent-name>[review2]</parent-name>
            <remote-alias>date_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review2_B7024A65E2074B89945FC869A7814166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_id (customer_dim)]</local-name>
            <parent-name>[customer_dim]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customer_dim_AB246ED88F3D4583A0E55586603C5735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>131</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[customer_dim]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customer_dim_AB246ED88F3D4583A0E55586603C5735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_city]</local-name>
            <parent-name>[customer_dim]</parent-name>
            <remote-alias>customer_city</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customer_dim_AB246ED88F3D4583A0E55586603C5735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_state]</local-name>
            <parent-name>[customer_dim]</parent-name>
            <remote-alias>customer_state</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customer_dim_AB246ED88F3D4583A0E55586603C5735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_zipcode</remote-name>
            <remote-type>131</remote-type>
            <local-name>[prev_zipcode]</local-name>
            <parent-name>[customer_dim]</parent-name>
            <remote-alias>prev_zipcode</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customer_dim_AB246ED88F3D4583A0E55586603C5735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_customercity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prev_customercity]</local-name>
            <parent-name>[customer_dim]</parent-name>
            <remote-alias>prev_customercity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customer_dim_AB246ED88F3D4583A0E55586603C5735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_customerstate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prev_customerstate]</local-name>
            <parent-name>[customer_dim]</parent-name>
            <remote-alias>prev_customerstate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customer_dim_AB246ED88F3D4583A0E55586603C5735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_id (product_orders4)]</local-name>
            <parent-name>[product_orders4]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_orders4_0060D787C158454498202817274A7EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchase_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[purchase_id]</local-name>
            <parent-name>[product_orders4]</parent-name>
            <remote-alias>purchase_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_orders4_0060D787C158454498202817274A7EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_dim_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_dim_id (product_orders4)]</local-name>
            <parent-name>[product_orders4]</parent-name>
            <remote-alias>product_dim_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_orders4_0060D787C158454498202817274A7EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[product_price]</local-name>
            <parent-name>[product_orders4]</parent-name>
            <remote-alias>product_price</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_orders4_0060D787C158454498202817274A7EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_qty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_qty]</local-name>
            <parent-name>[product_orders4]</parent-name>
            <remote-alias>product_qty</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_orders4_0060D787C158454498202817274A7EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_price]</local-name>
            <parent-name>[product_orders4]</parent-name>
            <remote-alias>total_price</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_orders4_0060D787C158454498202817274A7EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchase_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[purchase_id (purchased_time_dim)]</local-name>
            <parent-name>[purchased_time_dim]</parent-name>
            <remote-alias>purchase_id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[purchased_time_dim_A941F830E3C04035BFBF436D43B6D860]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchase_year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[purchase_year]</local-name>
            <parent-name>[purchased_time_dim]</parent-name>
            <remote-alias>purchase_year</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[purchased_time_dim_A941F830E3C04035BFBF436D43B6D860]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchase_quarter</remote-name>
            <remote-type>131</remote-type>
            <local-name>[purchase_quarter]</local-name>
            <parent-name>[purchased_time_dim]</parent-name>
            <remote-alias>purchase_quarter</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[purchased_time_dim_A941F830E3C04035BFBF436D43B6D860]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchase_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[purchase_month]</local-name>
            <parent-name>[purchased_time_dim]</parent-name>
            <remote-alias>purchase_month</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[purchased_time_dim_A941F830E3C04035BFBF436D43B6D860]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchase_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[purchase_day]</local-name>
            <parent-name>[purchased_time_dim]</parent-name>
            <remote-alias>purchase_day</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[purchased_time_dim_A941F830E3C04035BFBF436D43B6D860]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchase_clocktime</remote-name>
            <remote-type>134</remote-type>
            <local-name>[purchase_clocktime]</local-name>
            <parent-name>[purchased_time_dim]</parent-name>
            <remote-alias>purchase_clocktime</remote-alias>
            <ordinal>26</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[purchased_time_dim_A941F830E3C04035BFBF436D43B6D860]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date_id (date)]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_id</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_6FC627B7F1D844EB9C759A65087A411F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[date_year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_6FC627B7F1D844EB9C759A65087A411F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_quarter</remote-name>
            <remote-type>131</remote-type>
            <local-name>[date_quarter]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_quarter</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_6FC627B7F1D844EB9C759A65087A411F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[date_month]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_month</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_6FC627B7F1D844EB9C759A65087A411F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[date_day]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_day</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_6FC627B7F1D844EB9C759A65087A411F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_photos_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[product_photos_qty]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>product_photos_qty</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height</remote-name>
            <remote-type>3</remote-type>
            <local-name>[height]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>height</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>3</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>length</remote-name>
            <remote-type>3</remote-type>
            <local-name>[length]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>length</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>width</remote-name>
            <remote-type>3</remote-type>
            <local-name>[width]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>width</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_dim_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_dim_id (product_dim2)]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>product_dim_id</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_flag</remote-name>
            <remote-type>11</remote-type>
            <local-name>[current_flag]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>current_flag</remote-alias>
            <ordinal>41</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effective_timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[effective_timestamp]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>effective_timestamp</remote-alias>
            <ordinal>42</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expire_timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[expire_timestamp]</local-name>
            <parent-name>[product_dim2]</parent-name>
            <remote-alias>expire_timestamp</remote-alias>
            <ordinal>43</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Review Score (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[review_score]' peg='0' size='0.865' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='customer_dim' datatype='table' name='[__tableau_internal_object_id__].[customer_dim_AB246ED88F3D4583A0E55586603C5735]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_6FC627B7F1D844EB9C759A65087A411F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='product_dim2' datatype='table' name='[__tableau_internal_object_id__].[product_dim2_32FF987E13574EA4A25BF2AE7FC855B7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='product_orders4' datatype='table' name='[__tableau_internal_object_id__].[product_orders4_0060D787C158454498202817274A7EC2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='purchased_time_dim' datatype='table' name='[__tableau_internal_object_id__].[purchased_time_dim_A941F830E3C04035BFBF436D43B6D860]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='review2' datatype='table' name='[__tableau_internal_object_id__].[review2_B7024A65E2074B89945FC869A7814166]' role='measure' type='quantitative' />
      <column caption='Current Flag' datatype='boolean' name='[current_flag]' role='dimension' type='nominal' />
      <column caption='Customer City' datatype='string' name='[customer_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Customer Id (Customer Dim)' datatype='string' name='[customer_id (customer_dim)]' role='dimension' type='nominal' />
      <column caption='Customer Id (Product Orders4)' datatype='string' name='[customer_id (product_orders4)]' role='dimension' type='nominal' />
      <column caption='Customer Id' datatype='string' name='[customer_id]' role='dimension' type='nominal' />
      <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;CE&quot;' value='&quot;Florida&quot;' />
        </semantic-values>
      </column>
      <column caption='Date Day' datatype='real' name='[date_day]' role='dimension' type='quantitative' />
      <column caption='Date Id (Date)' datatype='string' name='[date_id (date)]' role='dimension' type='nominal' />
      <column caption='Date Id' datatype='string' name='[date_id]' role='dimension' type='nominal' />
      <column caption='Date Month' datatype='real' name='[date_month]' role='dimension' type='quantitative' />
      <column caption='Date Quarter' datatype='real' name='[date_quarter]' role='dimension' type='quantitative' />
      <column caption='Date Year' datatype='real' name='[date_year]' role='dimension' type='quantitative' />
      <column caption='Effective Timestamp' datatype='datetime' name='[effective_timestamp]' role='dimension' type='ordinal' />
      <column caption='Expire Timestamp' datatype='datetime' name='[expire_timestamp]' role='dimension' type='ordinal' />
      <column caption='Height' datatype='integer' name='[height]' role='measure' type='quantitative' />
      <column caption='Length' datatype='integer' name='[length]' role='measure' type='quantitative' />
      <column caption='Prev Customercity' datatype='string' name='[prev_customercity]' role='dimension' type='nominal' />
      <column caption='Prev Customerstate' datatype='string' name='[prev_customerstate]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Prev Zipcode' datatype='integer' default-format='*00000' name='[prev_zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Product Dim Id (Product Dim2)' datatype='string' name='[product_dim_id (product_dim2)]' role='dimension' type='nominal' />
      <column caption='Product Dim Id (Product Orders4)' datatype='string' name='[product_dim_id (product_orders4)]' role='dimension' type='nominal' />
      <column caption='Product Dim Id' datatype='string' name='[product_dim_id]' role='dimension' type='nominal' />
      <column caption='Product Id' datatype='string' name='[product_id]' role='dimension' type='nominal' />
      <column caption='Product Photos Qty' datatype='integer' name='[product_photos_qty]' role='measure' type='quantitative' />
      <column caption='Product Price' datatype='real' name='[product_price]' role='measure' type='quantitative' />
      <column caption='Product Qty' datatype='integer' name='[product_qty]' role='measure' type='quantitative' />
      <column aggregation='Hour' caption='Purchase Clocktime' datatype='datetime' name='[purchase_clocktime]' role='dimension' type='ordinal' />
      <column caption='Purchase Day' datatype='real' name='[purchase_day]' role='dimension' type='quantitative' />
      <column caption='Purchase Id (Purchased Time Dim)' datatype='string' name='[purchase_id (purchased_time_dim)]' role='dimension' type='nominal' />
      <column caption='Purchase Id' datatype='string' name='[purchase_id]' role='dimension' type='nominal' />
      <column caption='Purchase Month' datatype='real' name='[purchase_month]' role='dimension' type='quantitative' />
      <column caption='Purchase Quarter' datatype='real' name='[purchase_quarter]' role='dimension' type='quantitative' />
      <column caption='Purchase Year' datatype='real' datatype-customized='true' name='[purchase_year]' role='dimension' type='quantitative' />
      <column caption='Review Score' datatype='integer' name='[review_score]' role='measure' type='quantitative' />
      <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
      <column caption='Weight' datatype='integer' name='[weight]' role='measure' type='quantitative' />
      <column caption='Width' datatype='integer' name='[width]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[product_qty]' derivation='Avg' name='[avg:product_qty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:ok]' pivot='key' type='ordinal' />
      <column-instance column='[total_price]' derivation='Avg' name='[avg:total_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[product_photos_qty]' derivation='None' name='[none:product_photos_qty:ok]' pivot='key' type='ordinal' />
      <column-instance column='[purchase_quarter]' derivation='None' name='[none:purchase_quarter:ok]' pivot='key' type='ordinal' />
      <column-instance column='[product_price]' derivation='Sum' name='[sum:product_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[product_qty]' derivation='Sum' name='[sum:product_qty:ok]' pivot='key' type='ordinal' />
      <column-instance column='[product_qty]' derivation='Sum' name='[sum:product_qty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:product_photos_qty:ok]' palette='gray_10_0' type='palette'>
            <map to='#49525e'>
              <bucket>20</bucket>
            </map>
            <map to='#4f5964'>
              <bucket>19</bucket>
            </map>
            <map to='#56606b'>
              <bucket>18</bucket>
            </map>
            <map to='#5c6772'>
              <bucket>17</bucket>
            </map>
            <map to='#626d78'>
              <bucket>15</bucket>
            </map>
            <map to='#69757d'>
              <bucket>14</bucket>
            </map>
            <map to='#707c83'>
              <bucket>13</bucket>
            </map>
            <map to='#788389'>
              <bucket>12</bucket>
            </map>
            <map to='#808a8f'>
              <bucket>11</bucket>
            </map>
            <map to='#889296'>
              <bucket>10</bucket>
            </map>
            <map to='#90999c'>
              <bucket>9</bucket>
            </map>
            <map to='#98a0a2'>
              <bucket>8</bucket>
            </map>
            <map to='#a1a7a9'>
              <bucket>7</bucket>
            </map>
            <map to='#aaaeaf'>
              <bucket>6</bucket>
            </map>
            <map to='#b2b6b6'>
              <bucket>5</bucket>
            </map>
            <map to='#bbbebd'>
              <bucket>4</bucket>
            </map>
            <map to='#c4c6c5'>
              <bucket>3</bucket>
            </map>
            <map to='#cccdcd'>
              <bucket>2</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[avg:review_score:ok]' palette='gray_10_0' type='palette'>
            <map to='#49525e'>
              <bucket>5.0</bucket>
            </map>
            <map to='#505965'>
              <bucket>4.75</bucket>
            </map>
            <map to='#56616c'>
              <bucket>4.5</bucket>
            </map>
            <map to='#5d6873'>
              <bucket>4.2057917436845349</bucket>
            </map>
            <map to='#646f79'>
              <bucket>4.1917404129793514</bucket>
            </map>
            <map to='#6b777f'>
              <bucket>4.1457277168402618</bucket>
            </map>
            <map to='#737e85'>
              <bucket>4.1359276514113459</bucket>
            </map>
            <map to='#7b868c'>
              <bucket>4.1341125807443859</bucket>
            </map>
            <map to='#838e92'>
              <bucket>4.131946568777404</bucket>
            </map>
            <map to='#8c9599'>
              <bucket>4.1313131313131315</bucket>
            </map>
            <map to='#959d9f'>
              <bucket>4.0906642923841998</bucket>
            </map>
            <map to='#9ea5a6'>
              <bucket>4.0754716981132075</bucket>
            </map>
            <map to='#a7acad'>
              <bucket>4.0750000000000002</bucket>
            </map>
            <map to='#b0b4b4'>
              <bucket>4.0539682539682538</bucket>
            </map>
            <map to='#b9bcbc'>
              <bucket>3.9516129032258065</bucket>
            </map>
            <map to='#c3c5c4'>
              <bucket>3.6666666666666665</bucket>
            </map>
            <map to='#cccdcc'>
              <bucket>3.5714285714285716</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>1.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:product_qty:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:product_qty:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:product_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:total_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:total_price:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:product_qty:ok]' type='palette'>
            <map to='#499894'>
              <bucket>71</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>112108</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1446</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>295</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>12</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>20360</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>11319</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>30</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3391</bucket>
            </map>
            <map to='#d37295'>
              <bucket>5100</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17098</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>46837</bucket>
            </map>
            <map to='#e15759'>
              <bucket>320</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>60</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>7622</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>714</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>6</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:purchase_quarter:ok]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#8074a8'>
              <bucket>1.0</bucket>
            </map>
            <map to='#c46487'>
              <bucket>3.0</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>2.0</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>4.0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='customer_dim' id='customer_dim_AB246ED88F3D4583A0E55586603C5735'>
            <properties context=''>
              <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='customer_dim' table='[public].[customer_dim]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_6FC627B7F1D844EB9C759A65087A411F'>
            <properties context=''>
              <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='date' table='[public].[date]' type='table' />
            </properties>
          </object>
          <object caption='product_dim2' id='product_dim2_32FF987E13574EA4A25BF2AE7FC855B7'>
            <properties context=''>
              <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='product_dim2' table='[public].[product_dim2]' type='table' />
            </properties>
          </object>
          <object caption='product_orders4' id='product_orders4_0060D787C158454498202817274A7EC2'>
            <properties context=''>
              <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='product_orders4' table='[public].[product_orders4]' type='table' />
            </properties>
          </object>
          <object caption='purchased_time_dim' id='purchased_time_dim_A941F830E3C04035BFBF436D43B6D860'>
            <properties context=''>
              <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='purchased_time_dim' table='[public].[purchased_time_dim]' type='table' />
            </properties>
          </object>
          <object caption='review2' id='review2_B7024A65E2074B89945FC869A7814166'>
            <properties context=''>
              <relation connection='postgres.03xdqba0gm1ovp1b25c6c1qout5f' name='review2' table='[public].[review2]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_id]' />
              <expression op='[customer_id (customer_dim)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' guaranteed-value='true' object-id='review2_B7024A65E2074B89945FC869A7814166' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='customer_dim_AB246ED88F3D4583A0E55586603C5735' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[date_id]' />
              <expression op='[date_id (date)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' guaranteed-value='true' object-id='review2_B7024A65E2074B89945FC869A7814166' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='date_6FC627B7F1D844EB9C759A65087A411F' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_dim_id]' />
              <expression op='[product_dim_id (product_dim2)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' guaranteed-value='true' object-id='review2_B7024A65E2074B89945FC869A7814166' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='product_dim2_32FF987E13574EA4A25BF2AE7FC855B7' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[customer_id (customer_dim)]' />
              <expression op='[customer_id (product_orders4)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='customer_dim_AB246ED88F3D4583A0E55586603C5735' unique-key='true' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' guaranteed-value='true' object-id='product_orders4_0060D787C158454498202817274A7EC2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[purchase_id]' />
              <expression op='[purchase_id (purchased_time_dim)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' guaranteed-value='true' object-id='product_orders4_0060D787C158454498202817274A7EC2' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='purchased_time_dim_A941F830E3C04035BFBF436D43B6D860' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Review score per month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Olist' name='federated.1lf9wra1mpofx81d4dgqh0c3vy0h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lf9wra1mpofx81d4dgqh0c3vy0h'>
            <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
            <column caption='Date Month' datatype='real' name='[date_month]' role='dimension' type='quantitative' />
            <column-instance column='[date_month]' derivation='None' name='[none:date_month:ok]' pivot='key' type='ordinal' />
            <column caption='Review Score' datatype='integer' name='[review_score]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_month:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' scope='rows' value='Average Review Scores' />
            <format attr='width' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' value='52' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_month:ok]' value='24' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#818b91' />
                <format attr='size' value='1.4942541122436523' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-transparency' value='188' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='347' />
                <format attr='maxheight' value='347' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]</rows>
        <cols>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_month:ok]</cols>
      </table>
      <simple-id uuid='{10C24E23-4B02-4B09-ADF0-F81273C1482A}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Sales of product categories in each state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sales2+ (Olist)' name='federated.0yhksbr0d586o61a145mw1u0npoj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0yhksbr0d586o61a145mw1u0npoj'>
            <column-instance column='[product_category_name]' derivation='None' name='[none:product_category_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[seller_state]' derivation='None' name='[none:seller_state:nk]' pivot='key' type='nominal' />
            <column caption='Product Category Name' datatype='string' datatype-customized='true' name='[product_category_name]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column caption='Seller State' datatype='string' name='[seller_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]&quot;' user:op='manual' />
          </filter>
          <computed-sort column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]' direction='DESC' using='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]' />
          <computed-sort column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_state:nk]' direction='DESC' using='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]' />
          <slices>
            <column>[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[Multiple Values]' scope='rows' value='Sales' />
            <format attr='width' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[Multiple Values]' value='32' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_state:nk]' value='30' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]' value='32' />
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names] * [federated.0yhksbr0d586o61a145mw1u0npoj].[Multiple Values])</rows>
        <cols>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_state:nk]</cols>
      </table>
      <simple-id uuid='{223BFC16-1A72-43DE-8CFF-35BA2E34A137}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Total revenue for top 10 product categories in highest earning quarter </run>
            <run>Æ&#10;</run>
            <run fontsize='9'>Quarter 2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sales2+ (Olist)' name='federated.0yhksbr0d586o61a145mw1u0npoj' />
          </datasources>
          <datasource-dependencies datasource='federated.0yhksbr0d586o61a145mw1u0npoj'>
            <column-instance column='[product_category_name]' derivation='None' name='[none:product_category_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[quarter]' derivation='None' name='[none:quarter:ok]' pivot='key' type='ordinal' />
            <column-instance column='[seller_city]' derivation='None' name='[none:seller_city:nk]' pivot='key' type='nominal' />
            <column caption='Product Category Name' datatype='string' datatype-customized='true' name='[product_category_name]' role='dimension' type='nominal' />
            <column caption='Quarter' datatype='integer' datatype-customized='true' name='[quarter]' role='dimension' type='quantitative' />
            <column caption='Seller City' datatype='string' name='[seller_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;curitiba&quot;' value='cu' />
                <alias key='&quot;ibitinga&quot;' value='ib' />
                <alias key='&quot;ribeirao preto&quot;' value='rp' />
                <alias key='&quot;rio de janeiro&quot;' value='rdj' />
                <alias key='&quot;sao paulo&quot;' value='sp' />
              </aliases>
            </column>
            <column-instance column='[total_sales_price]' derivation='Sum' name='[sum:total_sales_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Sales Price' datatype='real' name='[total_sales_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:product_category_name:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:product_category_name:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;automotivo&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;beleza_saude&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;brinquedos&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;cama_mesa_banho&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;cds_dvds_musicais&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;cool_stuff&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;esporte_lazer&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;fashion_calcados&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;fraldas_higiene&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;informatica_acessorios&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;la_cuisine&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;moveis_decoracao&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;pcs&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;portateis_cozinha_e_preparadores_de_alimentos&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;relogios_presentes&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;seguros_e_servicos&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;sneakers&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;utilidades_domesticas&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]'>
            <groupfilter function='member' level='[none:quarter:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]'>
            <groupfilter count='2' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_sales_price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:seller_city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]</column>
            <column>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]</column>
            <column>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='144' />
            <format attr='cell-h' value='144' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
            <format attr='width' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]' value='350' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]' />
              <wedge-size column='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' />
              <size column='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' />
              <text column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.066298246383667' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='216' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]</cols>
      </table>
      <simple-id uuid='{7ACCEE61-AB02-443E-BD4E-BECE07C1B276}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Revenue for top 5 product categories and top 5 cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sales2+ (Olist)' name='federated.0yhksbr0d586o61a145mw1u0npoj' />
          </datasources>
          <datasource-dependencies datasource='federated.0yhksbr0d586o61a145mw1u0npoj'>
            <column-instance column='[product_category_name]' derivation='None' name='[none:product_category_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[seller_city]' derivation='None' name='[none:seller_city:nk]' pivot='key' type='nominal' />
            <column caption='Product Category Name' datatype='string' datatype-customized='true' name='[product_category_name]' role='dimension' type='nominal' />
            <column caption='Seller City' datatype='string' name='[seller_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;curitiba&quot;' value='cu' />
                <alias key='&quot;ibitinga&quot;' value='ib' />
                <alias key='&quot;ribeirao preto&quot;' value='rp' />
                <alias key='&quot;rio de janeiro&quot;' value='rdj' />
                <alias key='&quot;sao paulo&quot;' value='sp' />
              </aliases>
            </column>
            <column-instance column='[total_sales_price]' derivation='Sum' name='[sum:total_sales_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Sales Price' datatype='real' name='[total_sales_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:product_category_name:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:product_category_name:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;brinquedos&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;esporte_lazer&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;moveis_decoracao&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;relogios_presentes&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='&quot;utilidades_domesticas&quot;' />
                  <groupfilter function='member' level='[none:product_category_name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_sales_price])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:seller_city:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;04482255&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;abadia de goias&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;alvares machado&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;alvorada&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;angra dos reis&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;aparecida&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;aparecida de goiania&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;aracaju&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;aracatuba&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;araxa&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;artur nogueira&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;auriflama/sp&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;avare&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;bahia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;balneario camboriu&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;barbacena&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;bariri&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;barra velha&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;bebedouro&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;belford roxo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;belo horizont&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;bento goncalves&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;bertioga&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;bofete&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;bombinhas&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;bonfinopolis de minas&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;brasilia df&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;brotas&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;buritama&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cacador&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cafelandia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;caieiras&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cajamar&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;camboriu&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;campina das missoes&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;campo bom&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;campo do meio&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;campo magro&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;campo mourao&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cananeia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;caratinga&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cariacica&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cariacica / es&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;carmo do cajuru&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cascavael&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;castro pires&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cataguases&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;caucaia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cerqueira cesar&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cianorte&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;clementina&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;colatina&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;condor&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;congonhas&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;coxim&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cravinhos&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;cuiaba&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;dracena&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;echapora&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;engenheiro coelho&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;erechim&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;eunapolis&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;eusebio&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;extrema&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;fernando prestes&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;floranopolis&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;flores da cunha&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;formosa&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;fortaleza&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;francisco morato&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;gama&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;goioere&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;governador valadares&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;guaimbe&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;guanambi&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;guiricema&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;horizontina&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ibirite&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;icara&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ilheus&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ilicinea&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;imbe&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;indaial&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ipatinga&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;irati&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;itabira&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;itapema&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;itapetininga&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;itaporanga&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;itapui&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;itirapina&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ivoti&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;jacarei / sao paulo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;jaciara&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ji parana&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;joao pessoa&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;joao pinheiro&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;juzeiro do norte&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;lages - sc&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;lagoa da prata&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;lambari&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;lauro de freitas&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;leme&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;macatuba&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;mage&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;manaus&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;mandaguacu&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;mandirituba&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;marialva&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;marica&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;mateus leme&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;maua/sao paulo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;mesquita&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;messias targino&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;minas gerais&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;mococa&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;mogi das cruzes / sp&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;monte alegre do sul&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;monte alto&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;monteiro lobato&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;montes claros&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;morrinhos&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;muriae&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;neopolis&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;nhandeara&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;nilopolis&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;nova odessa&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;nova trento&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;novo hamburgo, rio grande do sul, brasil&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;novo horizonte&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;olimpia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;oliveira&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;orlandia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;osvaldo cruz&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ourinhos&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ouro fino&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pacatuba&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;paincandu&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;parai&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;paraiba do sul&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;paraiso do sul&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;paranavai&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pato bragado&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;paulinia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pedregulho&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pedrinhas paulista&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pedro leopoldo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;picarras&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pinhais/pr&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pitanga&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pitangueiras&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;poa&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pompeia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;porto seguro&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;porto velho&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;pouso alegre&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;prados&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;presidente bernardes&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;presidente epitacio&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;presidente getulio&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;resende&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ribeirao pretp&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;rio branco&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;rio das pedras&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;rio de janeiro / rio de janeiro&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;rio do oeste&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;rio grande&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;robeirao preto&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;rolante&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;ronda alta&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;s jose do rio preto&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sando andre&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santa barbara d´oeste&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santa catarina&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santa cecilia&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santa cruz do sul&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santa maria&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santa rosa&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santa rosa de viterbo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santa terezinha de goias&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santo angelo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santo antonio da patrulha&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santo antonio de padua&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;santo antonio de posse&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao  jose dos pinhais&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao bento&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao bernardo do capo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao francisco do sul&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao joao da boa vista&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao jose do rio pret&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao jose dos pinhas&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao luis&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao miguel d&apos;oeste&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao miguel do oeste&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao paluo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;são paulo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao paulo sp&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao paulop&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao sebastiao&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sao vicente&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sapiranga&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;saquarema&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sbc&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;serrana&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sertanopolis&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;sinop&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;soledade&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;tabatinga&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;taio&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;taruma&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;teixeira soares&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;teresina&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;timoteo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;tres coroas&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;tres de maio&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;treze tilias&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;triunfo&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;uniao da vitoria&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;uruacu&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;uruguaiana&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;valinhos&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;vargem grande do sul&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;vargem grande paulista&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;varzea paulista&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;vendas@creditparts.com.br&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;viamao&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;viana&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;vicosa&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;videira&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;votorantim&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;xanxere&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='&quot;xaxim&quot;' />
                    <groupfilter function='member' level='[none:seller_city:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]' direction='ASC' />
          <slices>
            <column>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</column>
            <column>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' scope='rows' value='Total Revenue' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5602209568023682' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]</rows>
        <cols>([federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk] / [federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk])</cols>
      </table>
      <simple-id uuid='{FB3D36E9-E006-492E-A6AE-A99AD825B0D3}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Revenue per quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sales2+ (Olist)' name='federated.0yhksbr0d586o61a145mw1u0npoj' />
          </datasources>
          <datasource-dependencies datasource='federated.0yhksbr0d586o61a145mw1u0npoj'>
            <column-instance column='[quarter]' derivation='None' name='[none:quarter:ok]' pivot='key' type='ordinal' />
            <column caption='Quarter' datatype='integer' datatype-customized='true' name='[quarter]' role='dimension' type='quantitative' />
            <column-instance column='[total_sales_price]' derivation='Sum' name='[sum:total_sales_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Sales Price' datatype='real' name='[total_sales_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]' direction='DESC' using='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' value='23' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]' value='28' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
            <format attr='width' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3733149766921997' />
                <format attr='mark-color' value='#818b91' />
                <format attr='mark-transparency' value='219' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='320' />
                <format attr='maxwidth' value='320' />
                <format attr='minheight' value='200' />
                <format attr='maxheight' value='200' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:ok]</rows>
        <cols>[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]</cols>
      </table>
      <simple-id uuid='{7658C492-D8DD-488B-9F42-DFB9EBC3AB9A}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Review score based on number of product photos</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Olist' name='federated.1lf9wra1mpofx81d4dgqh0c3vy0h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lf9wra1mpofx81d4dgqh0c3vy0h'>
            <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product_photos_qty]' derivation='None' name='[none:product_photos_qty:ok]' pivot='key' type='ordinal' />
            <column caption='Product Photos Qty' datatype='integer' name='[product_photos_qty]' role='measure' type='quantitative' />
            <column caption='Review Score' datatype='integer' name='[review_score]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' scope='rows' value='Average Review Score' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
                <format attr='mark-transparency' value='239' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#d37295' />
                <format attr='size' value='0.44977900385856628' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]</rows>
        <cols>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:product_photos_qty:ok]</cols>
      </table>
      <simple-id uuid='{5881566B-F995-4784-83B5-5C84D9D11BC0}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Products bought per month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Olist' name='federated.1lf9wra1mpofx81d4dgqh0c3vy0h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lf9wra1mpofx81d4dgqh0c3vy0h'>
            <column-instance column='[purchase_month]' derivation='None' name='[none:purchase_month:ok]' pivot='key' type='ordinal' />
            <column caption='Product Qty' datatype='integer' name='[product_qty]' role='measure' type='quantitative' />
            <column caption='Purchase Month' datatype='real' name='[purchase_month]' role='dimension' type='quantitative' />
            <column-instance column='[product_qty]' derivation='Sum' name='[sum:product_qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_month:ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:product_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:product_qty:qk]' field-type='quantitative' max='13000' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:product_qty:qk]' scope='cols' value='Number of products bought' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_month:ok]' value='16' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#818b91' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
                <format attr='mark-transparency' value='162' />
                <format attr='size' value='1.4062983989715576' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='554' />
                <format attr='maxwidth' value='554' />
                <format attr='minheight' value='240' />
                <format attr='maxheight' value='240' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_month:ok]</rows>
        <cols>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:product_qty:qk]</cols>
      </table>
      <simple-id uuid='{0BB5BEAF-93BE-42D6-8123-F547FA7C760C}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Review scores per quarter in each year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Olist' name='federated.1lf9wra1mpofx81d4dgqh0c3vy0h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lf9wra1mpofx81d4dgqh0c3vy0h'>
            <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
            <column caption='Date Quarter' datatype='real' name='[date_quarter]' role='dimension' type='quantitative' />
            <column caption='Date Year' datatype='real' name='[date_year]' role='dimension' type='quantitative' />
            <column-instance column='[date_quarter]' derivation='None' name='[none:date_quarter:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date_year]' derivation='None' name='[none:date_year:ok]' pivot='key' type='ordinal' />
            <column caption='Review Score' datatype='integer' name='[review_score]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_year:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:date_year:ok]' />
              <groupfilter function='member' level='[none:date_year:ok]' member='2021.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' scope='rows' value='Average Review Score' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_year:ok]' value='10' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <text column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-color' value='#b07aa1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]</rows>
        <cols>([federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_year:ok] / [federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_quarter:ok])</cols>
      </table>
      <simple-id uuid='{88F4B64A-EA4E-4DDA-A431-E7638364AAE4}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Total Earnings per State</run>
            <run>Æ&#10;</run>
            <run fontsize='9'>Size of bubbles based on earnings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Olist' name='federated.1lf9wra1mpofx81d4dgqh0c3vy0h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lf9wra1mpofx81d4dgqh0c3vy0h'>
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;CE&quot;' value='&quot;Florida&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[Latitude (generated)]</column>
            <column>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:total_price:qk]' num-steps='54' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5cece</color>
                <color>#daaeae</color>
                <color>#ce9090</color>
                <color>#c37575</color>
                <color>#b85c5c</color>
                <color>#ac4545</color>
                <color>#a13030</color>
                <color>#951d1d</color>
                <color>#8a0d0d</color>
                <color>#7f0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:customer_state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:customer_state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:customer_state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:total_price:qk]' />
              <text column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:customer_state:nk]' />
              <lod column='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:customer_state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[Latitude (generated)]</rows>
        <cols>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2237C989-CF56-4D46-B1C4-EBA2B9EC8202}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Total earnings across all 3 years (2016 to 2018)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Olist' name='federated.1lf9wra1mpofx81d4dgqh0c3vy0h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lf9wra1mpofx81d4dgqh0c3vy0h'>
            <column-instance column='[purchase_month]' derivation='None' name='[none:purchase_month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[purchase_year]' derivation='None' name='[none:purchase_year:ok]' pivot='key' type='ordinal' />
            <column caption='Purchase Month' datatype='real' name='[purchase_month]' role='dimension' type='quantitative' />
            <column caption='Purchase Year' datatype='real' datatype-customized='true' name='[purchase_year]' role='dimension' type='quantitative' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:total_price:qk]' scope='rows' value='Earnings' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#818b91' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='1.2193922996520996' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:total_price:qk]</rows>
        <cols>([federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_year:ok] / [federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_month:ok])</cols>
      </table>
      <simple-id uuid='{E7080413-9198-4747-BE7E-26712ED5D985}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Sales and revenue per month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sales2+ (Olist)' name='federated.0yhksbr0d586o61a145mw1u0npoj' />
          </datasources>
          <datasource-dependencies datasource='federated.0yhksbr0d586o61a145mw1u0npoj'>
            <column caption='Month' datatype='integer' datatype-customized='true' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sales_price]' derivation='Sum' name='[sum:total_sales_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Sales Price' datatype='real' name='[total_sales_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' scope='rows' value='Total Revenue' />
            <format attr='title' class='0' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]' scope='rows' value='Sales Quantity' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:month:ok]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk] + [federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk])</rows>
        <cols>([federated.0yhksbr0d586o61a145mw1u0npoj].[none:month:ok] / [federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{B669CA39-118B-4A19-946E-851A21043E46}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Revenue per product category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sales2+ (Olist)' name='federated.0yhksbr0d586o61a145mw1u0npoj' />
          </datasources>
          <datasource-dependencies datasource='federated.0yhksbr0d586o61a145mw1u0npoj'>
            <column-instance column='[product_category_name]' derivation='None' name='[none:product_category_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Category Name' datatype='string' datatype-customized='true' name='[product_category_name]' role='dimension' type='nominal' />
            <column-instance column='[total_sales_price]' derivation='Sum' name='[sum:total_sales_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Sales Price' datatype='real' name='[total_sales_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]' direction='DESC' using='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' />
          <filter class='quantitative' column='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' scope='rows' value='Total Revenue' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#818b91' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]</rows>
        <cols>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</cols>
      </table>
      <simple-id uuid='{95059D87-29CD-4CD4-AA16-46A5619396E8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>CS779 Term Project: Data Warehousing</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='76' param='horz' type-v2='layout-flow' w='99036' x='482' y='929'>
            <zone h='98142' id='64' param='vert' type-v2='layout-flow' w='99036' x='482' y='929'>
              <zone h='4994' id='65' type-v2='title' w='99036' x='482' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='93148' id='62' param='vert' type-v2='layout-flow' w='99036' x='482' y='5923'>
                <zone h='93148' id='17' param='horz' type-v2='layout-flow' w='99036' x='482' y='5923'>
                  <zone h='93148' id='6' type-v2='layout-basic' w='99036' x='482' y='5923'>
                    <zone h='32287' id='5' name='Sheet 11' w='24322' x='49301' y='5923'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32310' id='9' name='Sheet 12' w='45088' x='28535' y='38210'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32287' id='14' name='Sheet 9' w='26254' x='482' y='5923'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='28551' id='15' name='Sheet 8' w='44189' x='28535' y='70520'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32296' id='19' name='Sheet 7' w='25895' x='73623' y='5923'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='28551' id='20' name='Sheet 6' w='26794' x='72724' y='70520'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='35308' id='22' name='Sheet 5' w='13548' x='14987' y='38210'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='35308' id='28' name='Sheet 1' w='14505' x='482' y='38210'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32287' id='33' name='Sheet 13' w='22565' x='26736' y='5923'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32301' id='48' name='Sheet 10' w='25895' x='73623' y='38219'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='25553' id='74' name='Sheet 2' w='28053' x='482' y='73518'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontsize='15'>CS779 Term Project: Data Warehousing</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2850' minheight='2850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='105' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='104' param='vert' type-v2='layout-flow' w='99036' x='482' y='929'>
                <zone h='4994' id='65' type-v2='title' w='99036' x='482' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32287' id='14' is-fixed='true' name='Sheet 9' w='26254' x='482' y='5923'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32287' id='33' is-fixed='true' name='Sheet 13' w='22565' x='26736' y='5923'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32287' id='5' is-fixed='true' name='Sheet 11' w='24322' x='49301' y='5923'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32296' id='19' is-fixed='true' name='Sheet 7' w='25895' x='73623' y='5923'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='35308' id='28' is-fixed='true' name='Sheet 1' w='14505' x='482' y='38210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='35308' id='22' is-fixed='true' name='Sheet 5' w='13548' x='14987' y='38210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='32310' id='9' is-fixed='true' name='Sheet 12' w='45088' x='28535' y='38210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='32301' id='48' is-fixed='true' name='Sheet 10' w='25895' x='73623' y='38219'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='28551' id='15' is-fixed='true' name='Sheet 8' w='44189' x='28535' y='70520'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='28551' id='20' is-fixed='true' name='Sheet 6' w='26794' x='72724' y='70520'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='197' h='25553' id='74' is-fixed='true' name='Sheet 2' w='28053' x='482' y='73518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BDAD67AD-8E29-4D6A-B644-D24A48F2F897}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[:Measure Names]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:ok]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:Review Score (bin):qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:customer_id:nk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_id:nk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_month:ok]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_month:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_quarter:ok]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_quarter:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_year:ok]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_year:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:product_dim_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AABBD7FD-9AAA-4B18-94B1-F349C64457C5}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:product_price:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[avg:review_score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C79D105-C528-481F-91E1-A108A4C18AEA}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_day:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_month:ok]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_month:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B67ECFB-98FB-45E4-959B-356E16B213A9}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_quarter:ok]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_quarter:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_year:ok]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:date_year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41ABE92A-E013-4807-9ADF-11EC9727056A}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:total_price:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:customer_city:nk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:customer_state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F702622-EAEE-464D-8734-15B6B7B2BDA9}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_month:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[none:purchase_year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0AF0250F-E172-49ED-A373-A3116D03520C}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:month:ok]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:month:qk]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:year:qk]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[tyr:month:qk]</field>
            <field>[federated.1lf9wra1mpofx81d4dgqh0c3vy0h].[sum:product_qty:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0831B922-172F-4739-A945-8C78FEB3E202}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</field>
                  <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;seguros_e_servicos&quot;</value>
                <value>283.28999999999996</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:category_id (category):ok]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BB219A2-4090-4C1B-ACE8-B84FD5DDCEFC}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:sales_qty:qk]&quot;</bucket>
                </multibucket>
                <axis>[federated.0yhksbr0d586o61a145mw1u0npoj].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3823EADF-5603-4239-9C1E-67BF90A66444}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]'>
          <color-one-way>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;curitiba&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B2C7E21-372F-4D09-B55D-3E961D978964}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0yhksbr0d586o61a145mw1u0npoj].[sum:total_sales_price:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:month:ok]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:month:qk]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:product_category_name:nk]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:qk]</field>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:seller_city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9879F79E-C37A-4067-963E-1916ABDBCA3A}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yhksbr0d586o61a145mw1u0npoj].[none:quarter:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{560F4CB2-2819-40B5-B291-074C40EDBB25}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 11' />
        <viewpoint name='Sheet 12'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 13' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
          <highlight field='[federated.0yhksbr0d586o61a145mw1u0npoj].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 9'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{83FA822C-FDA8-4F7D-99A8-2D88D0B5A665}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      yhY0VcPr9XJwchyr3Y6qKLQHg4xtfHfsFhlRFGmv1Nw02gM+JicMZKsVtVLF6/UydWAMi9WK
      Xq3S0d6OKdV+qtNmrW+w9popXlVraW9KO2j6oJYpXlXVBmezVhsuwzD2pJVpdp1mbZuVlUql
      zyTJtt3+gF4Coszo8NCu4p2Tfzva/I3xGJ9mLMGu5im+Nq8nmPdB77bpfbn5EHRdb5gIdzr+
      NG3v5zqb8bqbk3Hn8adBPp/fNbmKxeKuTPGtrrHXBdDsOntdAM3aPkNr3JdwKwgCgqkTXV5m
      PZHe5XIrSRKaWiGeTNePt7etKjXHs1IhS2lHmiPT0KhUNUzToKwoDQ96s5/NN2Wz62Ia5POF
      Bv5RYNfxvcFkcXGxQQRUKyWWV2IN18hnkszenKOqm/XySinPzdlZskWlocf4yiKF6vYeTZYX
      Fth0RRRFEdPUWLg1x1oiXS/DNIlGFlhcWrnP3/R04v53d6KE19tGPL7e9PTt2wtU8+vE0o2f
      dUNXmbn0MSVVY3EpRiS82HA+tbbMajxDOrHGrfnIrn6r5QLTV3enTtrE+soSM7cWWp6/HyRW
      l1lP5hoXgGaQzzZqi2xOD21Wg1x5a3Fb7HYcVgvpbVkxtUqR1aVFcsr2Hg1KqRwNuSRNga6e
      HlKpRrWs2+0hk7l7Mu9n2I37XgCCIKIU0nT3DzU97/e6a3rjHV6DomShO9QJho7N4cJubTRs
      eDcytQQ6OnE0cc+0Oty0t+DqMfUqC0sr5DMpVP3Be7Yl02kKmQTF8tb0dLrcyDvEkXQ8huDu
      JLgtCl3TdNq8HsqlLXVffH0d3TBIp7dn45HwuHdw4ZsatxeXGR/bclUwAclixdS1faWUeFh4
      AKZCE0Ny0O5uHkVlsViRHX76Qo2TVVcV4tk8ZVsGq1lBszY63aUzWTJZFZtQJp/PU65qOLYl
      ryjnM+TzeeKpLB2BxjxggmTlhRdfYn09juUz4Dk8cPAovQMFXA4rpWJtYafiMTRDI1+q4HHW
      7oUgimSS67S1teHcXMS6xnoyw8DAUL2/7v5hOjo6UKVtfip6hayhUY3GcPdu0NPrOqJosrae
      pLdrKyFfLpOis6tnz6rpYrGIy+W6e8Um0KoKmmDZlZbqcUW5VMTmcLW07N/XJvhpQ7OJUy6X
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='188' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAC8CAYAAAAuPKG9AAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deVhV1d7HP/tMDIcZFFBBVMQhJ5REKNByttK8paZWal2HSm9Y6S15u+Lt
      1dQGj+mt9Fam6U3zNc3M4VqWpGiG4oiIR5lURETm+cB+/ziAB2U4IAc4sD/Pcx4f9l57rd/a
      ru9ev732Wr8liKIoIiHRSpE1tQESEk2JJACJVo0kAIlWjSQAiVaNJACJVo0kAIlWjSQAiVaN
      JACJVo0kAIlWjSQAiVaNJACJVo0kAIlWjSQAiSZAx52obfzjpREE+fnh5xfEiJfe52BSUaNb
      IglAotHJCn+PyTO/In3kag4cjyQyYgfLBsTwj4kz2XhV1zhGJGxkqp+fJACJRkZ3gk/DfoJJ
      y1g1qQfWCkDVFr/X1vBuYCxr3vqS2EY0RxKARKOii/iJH7K6MOmZASgqnbFjxKRx2CXu4WC0
      /kjCxqn4+S0m3CDVvcdyo3fwj5ee4LEAP/z8/Ah47Fne2niWLH1ipvr5sTgcyArn/aeD8Ju6
      kWMbp+L3zBouIQlAopG5HqelmO54d77/nKK9Bx4kc+Om8W5Qxo07dJmxmh8ORxIZGcEPix7i
      3JoQPj1hmEcCW+aFcrTtYMYP8cZn2hYid8yjG9wjQgmJpqS9B16ANuk60NG4S4bNZFrFXyra
      Dp/E2E9+IuLidXDVH834YRMXJn3HrjHu9zV4SQASzYfrScQDXh7tjb8m6yzbPtSw6feLpGQX
      VxzuZpDk9kNT+aiKxg+SCyTRyHTs2h0lMWiv3n9OdyWWWLrh08XY53IKO/4+G03CAJZsO0xk
      ZCSRkTuY161yKm/vztU+6SUBSDQuA0cyzu4K23acpLKnn8V/f/gvxf3GMso47we4xNk/i3l8
      2mz82qrqZY4kAInGRTGQV8OegG2LmL/tInk6oOgWkf+ax3sRPsxb9Ey5645LGzdAi/aqDnR5
      JJ//ke9+STbIzI12nnDsl1+5o4OiLC0H3/8fvq6id7mPjr3oZycJQKIJsAt+l2///RKOe15l
      6CA//AZPYsHWCxR3fpwhne86K+oRr/HOo5n8e+IgAoa/yHsHLRn0qLtBTj5MDpuJT8Q/GDEo
      gJGvbeLOEwuYXsUI0/0MYLZmHoIUF0iiOZAb8R5/+dte3OZt4ctp1fvsDY3UA0g0C9SBb7B4
      nB0X1rzCe+FZjVau1ANItGqkHkCiVSMJQKJVIwlAolUjCUCiVSMJQKJVIwlAolUjCUCiBaHj
      TsyPrHr1WR4L8CPo6VdZdSiZmlYXSAKQaDn88QHjZv6HgtFhbDscyaZpVvy4cDqrTlYvAUkA
      Ei2GAstHWPHDN7zzVC/aqqDT+HEEkcbp89ervUZaECPRYrDsG0yg4YGUZK4DCkX1zVzqASRa
      LB/M1XDaeRyzn65+hZnUA0i0QHTciVjDbsVEPvl2HoHq6lNKApBoYWRx4oOXef37fA4c24Nd
      LaklF0iiBZFLxHsTePV7a55f959aGz9IPYBESyJ2Mx/+kEa3eet5rY8xzV/qASRaEAnHwknk
      IcYMM3pVvbQgRqLlEL7Yjzd+quLEEx8TuSS4ymskAUi0aiQXSKJVIwlAolUjCUCiVVPrMGhk
      ZGRj2CEh0SRIL8ESjY8oUpqaScmNO5TcSEPMzjdJMV8m5NSaRvoQJtF4FOnQxd1Ep01GzDFN
      o68rkgAkTE7pnWx0l29QmpSKWFLa1OZUQhKAhEnQ6XSQdJuSyzcoTa/dFWkqJAFINCiiWEr0
      uXP8cfQIYzz6YZ9b0tQm1YgkAIkGQRRFrsReIiL8MOl37gBwPCWWkTZdmtiymmmE7wD7mC0E
      otHePaLVBBJY+QCBwmz21ZiPFk1gbWmMMWd25bKbCK0mkNkPXJkmxOD/7FpiAls3fc1Pu3ZW
      NH6AhNs3ybWRN52NRtBwPcC+2Qi7nkZcN/qeE6NZJ9577B68Q4iQBmObJVpNIC+yiYgQ78on
      vEM4lF9A+E972HH+XLXX/5mawBCrDia2sv5ILpBEnRFFkcsxFzn8y8/k5ebWmDY2JQH/nl5Y
      5Rm/929jYpQLtG+2cF93fdeN0aIJFBDGrIf1YxAEQf+ruGAfs2tzb7QaAgM1VHJMCs6zeWYQ
      bmoBQVDj5juDTXGGCdI5sX4mQz0d9eWp3QiauZWYSvdZR+rPS3mqV1kaR0+GhkXcU3g6JzRT
      8HVT68sJmslWw0x0MXw1xdfAjiloTqQbcdcqVYbzm2cS5KZGEATUbr7MqFwZ0CWyO2Qono5l
      5QSFsDvRsDL7mB34Pgd2hlTU2bFXCPtSUzlmYL/PhK8q34P0E2jK7a/iHulivmKKrxvqsnvo
      O0WDvnr7mC0IdJ1/jGPzu1b8v/ovP82P3/8f+zYsZNkH/yXVoKjSXC0HN2p45+1FhLy7jE9+
      jCUTOJ11jYwrP/LaexNwf24w1s+NwCvsA7bfMHhBzj3N4orzT+Dz3hp+SjP9C3QDvAN4ExIh
      Iu6dBbP2Ioqi/nefK1QXtKwdOYyNnZYSlSYiiploDy5hpL1hmlhOJQxh5dEkikURMS2KpW6f
      MHHl3e44+2AIj7yq5bnvy9Ikn+WLmT6VS1o7kdDMOeyNz0UU04ha2oHPxoZwMLv8/Et80WV1
      mR1pxGyZRt6l2LrVZu1Ihm3sxNKoNERRJFN7kCWVKpPNwZBhhOnm8nNSsd6OUBVhwbPYbai1
      MxtYFTmYNWeTEcV8fp96gjE+T7KtzZt6+4vjWSx/k7W/GtzHiaFkztlLfG7ZPerwGWNDDpJd
      fv6lL+iyOoo0UURMi2HLtDz01RvNOlHk8qoAAlZdRhRFrl6+zAyrX4nTVvEOVZrAnjXfc7PP
      84QtW4Zm8TzGuxaRAZy7doXoa7cImvovtFsOk7d1D8cnOfGp5lsuAFDCgf8sIy74Y/35Lf/H
      oandSYpLvb+cBqZZukC6w5+yrvsGIhYFYwuAAhsXT1ydDFP5M2ep/90/Ld0JnjYRm2Vx6OiN
      gut8+8EpXt0bwdRy99XSgU7tXeBS+UVRbPl1JGt2BKPfes0S9+DFrJv1MGF7sxk+yZbszDu4
      d++Nu6X+vEPPkSzqWafK8Om67myIWESwvjIobFzwNKxMynY04dPZeHY8PmX1dR+1ko2z+jB7
      o5ax5f5331dZu3Q85dXp1a83THwazdQBZUfa4D+oB+HlT/ioLfw6cg07gt3v3qPF65j1cBh7
      s4czyTabzDvudO/tjmXZ/ek5chH3Vk8sLeXIb79y8o/j1Vaz8PwxLvo9zwJfF/1TVWaLx8Be
      Fectg5/mOcG57C8Vbj1G8ozFZuJL4CF5Idl5FnTp0A61HMCKDp2HM8eoze4ejGY5GzQ+6jgP
      PzG8rPFXh47E3aE8Vd59CwJC1/kci7lKPABnOZn+F0Z515BFShQnvl9Aj/Lry349FkSSmJwC
      gO/UUGRLeuA5dDKLNLs4mZRTY6zJKirD8YefYHhNlTl7it8CfOl9z+HewaOIu3i5LqVVIiXq
      BN8v6FGpboLQgwWRieir58vUUBlLengydPIiNLtOkpRTuXa5BSXcifqxxsYPEB93kU4e7apt
      UH+e2cm7H/0VrxcHY/3cYKyfm8rCy4noH/LWjBr1OIdWPsOglStY+ctZLuYW1bvedaFZCgBA
      qay5c9IdWcSwj0qYu01LZrnbdXkVAZUyUdTcxeXnkROwisvl1xv8KkY9vF9ge2w8Z794iyHq
      C3z4rDcDQ4+UuRBGV6ZJutr8vJwK96XyL4K71dtObPxZvnhrCOoLH/Ks90BCj+hrdy0xkR//
      vEVRRnINpehRKi2rP1mawI9fHCF1+Btc2HCYvK2Hydu6hZVd7yax6TaDw59+y54po+lY+Bt/
      D53BpN+vPUj1jaJZCsDWzpHDJ6JqTBMfeYTH3l7OSB+bahqXLfZxxzlZU0v16od/3F4OVR86
      sgxLHDoNYMTMUL79Yx/jdnzDkdouqTDDDsfDJ6ixNn36M+TYCaLu6VrOhe+nU4+uVV9jBF79
      /Inbe4jaq+dApwEjmBn6LX/sG8eOb44QezGandu+paDIuLk77Tt0Ii7pBlWmTr/G1c6DGeiY
      haV1DY8CuRUuHfowaczf2L38ZSz+e4wrRpVef4wSgFu7bpw7fZocHehykji5JYQZy89UTtSh
      I70P7GJ3qg7QkZNTUG+jXCfMZfCGl1m4P5kCgIJkwjXv8KlBkbZ2jhzYtZPkAkCXQ1L4embO
      WM7dJI8y6++J/P3F9ZzOKbMpdichYd8ZlDSIyXNuMn/KEsKT9fbq6zeXFQf1KQ6umM768CT0
      nkEByeG7OWTTEaNHtl0nMHfwBl5euF9vKwUkh2t4x7AyrhMICd7CyyE7ic3R6dPsX8i09X68
      Pa0mH64WBk1mzs35TFkSXla2jpykk2yZuwJ99Q6yYvp6wsvduoJkwncfQiZPZ9/uHygtLcXO
      wYmUC9Ek6/TXF1YjCIteAfSI3MyWqNsUlgK6Am5GnScBwMIS69hoTmUUcqX0DrlpZ/hy/XI+
      TCi/+hr/+frf7L6WQyFAST6XIyM47dq2Ytd4U2GUAHz/to7H9o7CVSlg7z2WsOjB/M/rfSsn
      6v0KX4Rks8hHiSC0oeeyY/W3ynY0q/fM4do7vjgLAmqviXzf8a/MMCjS9cXPWCH+E19nAaFN
      T6Z/Ay+tfAtDq7zn/sAXPbcx1kNv06CwBCa9Mt4ghQLf0F/4efwlXvd1RhDK6zeUCUH6FH5P
      Difhg7F42wsIgjv+S9J58/uF9/nrNVSG0av3MOfaO3pb1V5M/L4jfzWsDLYM1/xMmGItwzyU
      CIIzvkuLCAtfz1jH+tzA8ur5EvrLz4y/9Lq+bMEe77FhRA+dgL56fjw5PIEPxnpjLwgI7v7M
      PzuciR4VLROLniOY2u4iny5ZRMi7K/nmTGbVZck68uS85/CM2UzYokWE/O9qdlxT4QBg48uE
      MSIHVr9Hv2cm4PvZf2HIK4RURC9xJ9jPgQMbZuD13GCsZ0zmhahufDVjMDYPUH1jkBbESOgR
      4dB/93PudM2uZ0MwotvDeBWqTF6OMQtimuU7gHlQ9gFQqOFnJpN9RFEkLeYmbgpXVCrTN8zf
      484iKppH05N6AAnuxN4iNzkLgExdFodPH0KnKzZpmU/2GES7fNNOlJN6AIlaybhyu6LxA9gr
      7Bjc7zEUSqVJyw2PO4coE0xahjFIAmjFZCWkk30t477j9gp7gvoMrnFnlQcuuyCXVMumXx4p
      CaCVkpOcSWZ8WrXnHZWOPNpnMHK56dyU3xMv0NT+tySAVkhRVgHpl2ufaOakcuLRvoMRBNM0
      k7ScTNJtmtYNkgTQyigtKuH2hZsY++h1VjnzqO9gZDLTNJWj12JAaDoRSAJoRYiiyO3om5QU
      1W1xShuVCwG9H0UwQUNNzrhNtrrpmqEkgFZExpXbFGbWLyCVq5Urg/qYRgQRyfWf8fqgSAJo
      JeSl5pBzvZppDEbibuWGf5/A2hPWkYS0ZHLVTbN4XhJAK6CkqMSol15jaGfVjod7B9SesI78
      eSeh9kQmQBJAKyBdm0ppccOtr/VQd8Cvl3/tCetAbHICBTVNlTYRkgBaOHmpOeSnNnxoQk8b
      T/r3GtigeZ7JqnXlQoMjCaAF05CuT1V42XSkX88BtSc0kjPXtBRbNW4vIAmgBZNx5XaDuj5V
      0dmuM326+zZYfhfyTR8JwhBJAC2UoqwC8m7VaeVyveli34WHuvWtPaER/BkfTYll4/UCkgBa
      KBlXbzdaWYIg4OPQlR5djV8nVx0icEl3p9Z0DYUkgBZI/u0cCjPrvya7PgiCQHenbnTrUpeg
      SVVzPC6aElXjfBeQBNDSECHjavWzPE2JIAj0dOlJty49HigfXUkJV2mcTTUkAbQwcpIz0eWb
      djVXTehF8BDenbo9UD5Hrp5FVJq+F5AE0IIQRZGshMbzn6tDEAR6te1FF6/6xzQq1ulIlJl+
      Iz1JAC2IvFs5lBQ1jy2JZIKMPm796OjRqd55hF89C3LTNlFJAC2IqpY3NiUC4NuuPx4dvOp1
      fX5xITdUpnXnJAG0EAoz8ynOKWxqM+5DJsgY0H4A7dt71uv68ITzYKLFOCAJoMXQ3J7+hsgE
      GQ938KNdO486X5uVl8MtK9O5dZIAWgC6gmIK0vKa2owakQlyBnoOxM21fZ2vPZp40WSL5yUB
      tAByb2ZjDvHNZMgY6OWPaxu3Ol2Xmp1Outo064YlAbQA8lIbZ85PQ6AQ5AzsHEgbl7Z1ui7i
      +qXaE9URlYVKEoC5U5RTiC6v6T581QelICegyyO4OBsvghsZqWQ18LJJn+4dJQGYO3m3GmfK
      QEOjEBQEeAfg6Ohce+Iy/rjVsBucO7ZpIwnA3Mm/bZ4CAFAKKh7p+iiODk61JwbiUm+QZ9Mw
      U6Vd3ZwRS+SSAMyZouzCJp330xCoZCoCuwVhb+dgVPrI2/ENUq6Xt/67hCQAMyY/reZd2s0F
      C0HFo92DsbOzrzVtzM0ECtQP1gvI5XJUKv3eM5IAzJiiega5ao5YyCwI7jkEG5uaN8cFOJN1
      44HK8unRkfJRY0kAZopYKlKY1biLXkyNChVBPYagVte8M9iZpMsPtHi+jevdrfckAZgpRdkF
      iKXN/+NXXbGSWxL00BCsrK1rTFffxfNOzg6Ult4VjyQAM6Uwo2U9/Q2xllkR/NBjWFlZVZvm
      z4SL6Czr/l3Au1vHSn9LAjBTCjKb99yfB0Uttya412NYWlhUeV4URS4X120CoEwmw9Kq8juG
      JAAzRBRFihp50XtToJarGdxnKBYWllWej7h6gdI6LJ7v4uNJaWnlOUWSAMyQksKSFun/V4Va
      riaoz2BUyvu3by0R67Z43q3d/fvOSwIwQ3T5RU1tQqNiJ7cjqO8QFIr7d648GnfeqMXzdg42
      wP0ikgRghpjb5LeGwF5hX+X2rYXFRSTJa3cHfbp3pqoZ45IAzJDivNbVA5Sj3741GLms8hM/
      PK62xfMC1jZ2VZ6RBGCGmPv8nwfBUenEo/0qb9+aV1hAcg2L5zv7dKC0pOoFNZIAzJDW2gOU
      46xyJrBvcKXtW3+PPw/V7Dzfrr17tXlJAjAzRBHO3swnoQBulQhkyhUUKJWUWCrBQomgkjfp
      tqONRRuVS6XtWzPyc0i1un/nebWNFVD1twSAxt+TRuKBKCzUkZ1bTHZuzW6QlYUctZUCaws5
      1hYKVHIBpUz/Hy6IIkJJCWKJeQ+ltlG5ENg3iKOnwxFFkSOJFxnv8hCGb7vdHupSYx6SAMyM
      okLj9vjNLywhv7DmcCJKuYCNtRK1lQIrpQxLlVwvEgFkogglpaC7/6nanGhr0ZaAvo9w7MxR
      /eJ5D3A0+EhuY+tAaQ23QRKAmVFYS6OuC8UlIunZRaRnV/9OIZPJsLGSo7ZUYGkhx0opK+tN
      BOSiiFBailhcitFbz5sAN0t3BvYO4I+zEUQkx/KEvT4maUcv92pffsuRBGBm6Ey85dG9lJaW
      kpVbSlYtLpe1pQK1pQK1lQJLhYBKKaAUBOSIyAF0pnW52lu35+Heg/jz3HGy23fHNqeEDl4d
      qk2vLMxCnhwvCcDcKGmmfntegY68Ah2pNcxPUyllFSKxVslRKQRUMqGyy1VSf5fLQ+2B2Evk
      xK0rDLX2QiazrPTxS6YrwiItkeK4qxTe0u+hIAnAzCg14zlARcWlFBXX5nKBrZUSa0sFVhZy
      LJUyLBQyFALIxVIDl6tqPG08KSktIU+mQBRBQMQiMxmS4siPv0ZuaeVrBdEcQopJVBB/NZ0/
      jyU1tRlNjIi1pRIbKwVWFjKsVHIs5DIU5S/wpSKFBXeQ5ZRQcjMFGaUoLFXIVUoUFvp/5UoF
      coVC6gHMDYVC+nQDQoXLBaBUynBuo8TauhiBHEopJf66lme7+kPbqqdAlCMJwMyQBKBHLpfh
      5KLCxqYYmZCDIOh3piksLCYpPs7ofCQBmBlyecv/ylsdgiDg6KTEzl5EIcsBoXJYmPz8PK4n
      JtYpT0kAZoaiETaOa27YO6hwcAClKg/EKpaCCgJ5ubkkX0uqdMwYJAGYGa3FBbK2VuDkIsfS
      sgDETP3BqoZrBIHszExu3UyuVzmSAMwMZQvuASws5Di5KLC2KkQgW7/JWA1jlDKZnPQ7t7l9
      61a9y5QEYGZYWMqRyQSz/h5giFwh4OKiQq3Wv8xi5CuOTCYj7XYqd27XLz5QOZIAzAxBELBW
      K8mp4WNSc0cmE3B2scDGRodcngvULcSLXC4n5WYymenp1aYxdqhAEoAZorZRmZ8ABHB0VGFn
      X4pKkY9Yx0ZfjlwuJ/naNbKzsxrELEkAZoja5v7oBs0VWzsVDo6gUuUhoA/mW1/nTa5QcC0h
      nrzchouKLQnADFGrm7cArKz0IzhWlgVAZoPkqVAoSIyPIz+vYSPiSQIwQ2xsq1/i11QoVTKc
      XZRYWxciKx/Baai8lUritZcpKKzDRuDSd4CWi4NT9UFjGxO5XMDJRYWtrQ65kItogkUxCpUK
      7aUYdMWmiYRh3FeVfbMRAjXUdYsyXeJuQoLcUAsCgjCbfXW3r4nRogkUmN3MDLdRq1BZNM33
      AEGmb/Sduijx6lyAvV0GMiHHuMYfsZz+f92KsXNZFQolV2Mumqzxg0mnQ+vYN9ub7UOP8elE
      d6oOb9pM0GoIfBE2RYTg3dS2GMmR3+JJvt4wIyHGoJ+OIKJQ5iFg3LrkB0GpVBJ7MZrS0vot
      kBEEgWe8B9aazoQuUDyXzrWjz4Jm3vjNFGcXa5MLQK1W4OQsR2WRh9BAL7PGoFAoHqjx1wXj
      XSBDP0CrIXD2Tq7uDOUpX72Lo/aZwFcxurvpha7MP3aM+V0FhEoukI7E3SEM9XREEATUbkGE
      7E6s9EzZNzsQjRZ0iduY1cvxrvu1bzaB7x9gZ8hQPB0FBMGRXiH7SE09hmaKL25qAUHtw4Sv
      YgzyS+fE+pkV5QlqN4JmbuWuqQJC1/kcOzafrkKZrRXunhZNoN6WuxRwfvNMgtzU+tmJvaaw
      Nqpsp/b0E6yfWW6bvm4zt8bU8XlZs73lNtz6bSH/eM2fic/3Zfrbb7M//u7oSO6VzawOfZzn
      n+/L869NZ92xOO6uJC7h+uG3WVh27fOvTWT1/vOUDyxalkSx56NRvPx8X54Y78/4NxYTnmKw
      F1lJCoc/fo0xQwfR338ww2at4nCK4TrlY/zvX7eSRAk3f36fCUMHMf3bMqcnYjn93z9WqbZZ
      0VtZ9PwYAv0H0X/oFEK3xXAq+kJF4y9JDmd16DymvjCNCS/PY8GnB9A24N6A9Z9ZtfnvvBrZ
      k7C98eSKxcSvsCX0zU2kAIxehyheZlVAAKsui4iiiCiuYzSQfTCEYWE65v6cRLEokhYViios
      mFm77/mqd2MH0ydspeen0eQbuCZnNqwicvAaziaLiPm/M/XEGHye3EabN/cSnytSHL8Y+Ztr
      +bUio1hOJQxh5VF9eWJaFEvdPmHiynPoTRURL68iIGAVl8UyW2twha5/9QxB/+7A0qg0RLGY
      pO+nob6dVlbUKRKGrORoUjGiKJIWtRS3TyZSVpSR1GxvuQ3jvvNi8rLf+W7zKT5/fSyWOWWL
      cVO28vH2HEYs2M/mzWfYsPRvOP/yN74+XyaQlG/57NcOzFj6O99tPsOGD97ncV0CBW4WdPYW
      Sdj5NjefWs2+iOOciviRDfN6cjOmfK5NHn98PJfPSybw2Z6jnPrjIFtnKPl81vsczq5ci9Rf
      /8nC/3binW3hfD3Zo+qqJm3njX+c4qE3N/HbH8eJ/GkJHoffZNne5DLBprB//WFcX3yPr7/Z
      yPbPV/D6o0XcuFmX+1kz9RfA86vZv3QqA9wtAQVtxk9gbHoW2TVelMJ2TTjTN65lvI8NCsDS
      fRQrN84icvlGg5fsODQLfmXq/p2EBFd2ofq+upal43viYAlY9qJfb5gYpmHqAH06RRt/BvUo
      Nnjq+jNn6VQGeOjLw9Kd4GkTsdHG1cOTjeILjS2f71pMcFm9bXxGMmO4V1lRc1g6dQAeZZs5
      W7oHM22iDdq4upRUm716G9b9EMYjXRwAOZbugQzp1U5/5yJO0O/FOfRw0H8rUDr059mXnkX7
      2+8UAOTnkOPQCS8nC1zaqOjWuxtPhzyOv20GMuEOuTkWeHZqj7UckFvh2n0kkwaXhRa88wtb
      Tj/BewuG0NFKDqhwCZjLe+MvsmGPwavtja1oIkexduVz9Hep/pvF6V1bcH0tjKm+LqiAuMRS
      hs+ZgusP+zlbAlBAXq497Ts4oARQWtOhz1ME1xzrSo+Rw6CNPLf2LKd+C8C39z2HewczKu4i
      lysO2PPCGg2jHRuiTB2Ju++6aoJQ5vLEXCW+rlnFH+WQzSAGVGeXLpHdoU/hW+YeCYJA1/nH
      iLlal5JqsdfAhvYd7t1XN434K7/wzcK+THze4LfwY67cTiVDAMf+45hlu475819ixX/WcThW
      S36Fq23NoxOHcfzNp3juzaV8ues0Vw2nXGgvEdmr2329o7dvANfjr909YDOav78RQM2LEZO5
      dMGFnt7WlJaKXIm9pD9s6UPvrte4cRugI0HjZGxfOJ8l/9rOTyfjSSto2LAwzfQ7gBPOTg1j
      mu7IIoZ9JGPNNi07y3qd8lGfOmNljQ3VvXjqOLJoGB/J1rBNuxOfsl5AqwmkLkXVaq+BDe06
      2HLutOE8+EIKC/ow7aNveMJgMxRbOxWOjqBS5oHgwNjl2xiVfYMr0X8SsXkRSxP8+HDdK/Sz
      Buu+M9m053kyEi9x7PghPpqxFIuXP+bj0dW4MVVhZ4+dkaO0pSXFxGmvVnve7ZG5fDIwj1vX
      rnL23F4++uomvV9fxGSfhhlaaeQeoA/9hxzjRNQ9LsG5cPZ36kFXE5QYH3mEx95ezsjyxvQg
      uPoyMOc4J6uchBhP5JHHeHv5yIrGXx9qtdfABjs7S2wqzQtqh1eXG0RduIW1tYIOnpZ4dy3F
      1TUTlSoThLvj6SrbdvTwH8fL//slawf/xp7TBtnIrXDo1I/Rk9/gX5tmo9pxVHwRC64AAArk
      SURBVD92790Nv/PRxNzzENZGHaN9DUGoqkIQ2tG5eyp//H7PC1JBLOcud6Cdi8ExpTVtO/Vi
      2NhXWbagP8ePxNaprJpoZAG4MiEkmC0vh7AzNgcdUJC8n4XT1uP39jSTjMHb2jlyYNdOkgsA
      XQ5J4euZOWM5ZyqZ5UHnizvZdV6/00hBTk417we+/DUkmzlPLyFcnyE5SeFsOxgP2GLneIBd
      O5PRF5VE+PqZzFh+psqc6m+vgQ03C2jnYU3BnVNEnL+BykJO8NjJ5P/nbfbcikNmkQ4lGaTE
      HGD5phP6y098w+Kdp0nJ17fiotunCY+0Qr99VhI/ffwZh+KyKQIoySch/Hdi2rviDOA0lKn9
      9rPk499IyC8Birh9bC3v7uzBjCfr0EMAebm5OA0YQcb2L/jpUgbFQElBAgc//w8p40bRRw5w
      gV3rf+XinUL9S3FxBhejorF0cao1f2NnYjT6+jrb4Rp+DlOwdpgHSkHA2XcpRWHhrB/bIA7/
      fbi++BkrxH/i6ywgtOnJ9G/gpZVv0beSUeNYttGXH4Y5IwhqvKZ8x7Vq8mv/0g5OhqQT6uuM
      INjjPfZzUl2cAVde/GwF4j99cRYE2vSczje8xMq3+laTU/3tNbSh34DuvL76/1B1d6Zjxzzs
      +j3H52uDiP/oRYb4D6L/48/w+r+vMnBoP/3FPR7B/+ZmXv/L4/T3H8Twl/5N1tQVTOsC0I4B
      QY4c/fB5hpdd+/ejPVj61mPot622xv+NtcyRb+eVJx+hv/9wnttQzJz17zDY9t6aVIMAOdnZ
      3LiWBK7DWPhqd7Sb3mX6C9N47vV1RHefy6Ix7vpwingxoFcaP3z0Fi++MI0Jc5fwXe5oFjxR
      t96mRnOkwFjmjSiKRJ89Q1FdJoo1EYJMRmb6HVJTUkxelkwm4y9dHq49ncktkdCj1RBYPqpT
      za8+c44EQaBN2/u3/2xuyGQy0m+nNkrjrwtSD9ACKNHpOH86qlGmDtQHmUzGrZSbNS5hbPAy
      5XL+0tmv9nSNYIuEiZErFDg4OTe1GVUiVyi4eeNGozb+uiAJoIXQxrX5uUEKhYIbSYlkZzXe
      RLq6IgmghWCtVqO2sWlqMypQKBQkxMeRk13z5BhT0WyHQSVMh0szeRlWKBTEX71CQQOv3zUF
      kgBaEA5OTihVTbtgXqFUclV7mcKCgia1w1gkAbQgZDIZ7TrU7YtsQ6JQKrkSe4niIvOJWSQJ
      oIXh6OyMlbV1o5erUCi5fNG063frRPOcDi1hagRBoL2HZ6OWqVAqiI2JprSmDXmbKZIAWiC2
      9vbY2t+7VsA0yOVyLkVHIzbTj3C1IQmghdIYvYAgkxF7MRrMeDKBJIAWipW1NY7OLrUnrCeC
      IKCNuWiy/B8YI0UpCaAF097TE7mi4Rf9lYqlaC/FNHi+TYEkgBaMUqnE06tTg+ap05UQd/ly
      7QnNBEkALRwHJyecXB7cFRIEgeKiYhKu1jVAZhMhDYNKlNPesyOqB/xCnJ+fR2J89YvXzRVJ
      AK0AhUKBZ+fO9btYEMjNzanz/rvmgiSAVoKtnT1tXN3qdI0gCGRnZHDz+nUTWWVCjByZlQTQ
      wGg1gQRqmqef3M7DA2u12qi0MpmcjPR0bqU0YBzCRkSaDl0dWg2B9djroCUgk8no3NWn1hmj
      MpmM27ducftW81q/awpanwBaOUqVis5dfZDJqv6vl8vl3LqZTPqd241sWdNgAgGkc0IzpSw+
      phq3oJlsNYztrYvhq/JQ5oIaN98paE7cXS+q1QTy4ic7CX2qF46CgODYiymaE1RaUapLZHdF
      iHQ1bkEh7E6sFGCd2YEatOhI3DaLXo4CgRptLaHQy3a0GepZUe5TSw/zwCtZawuZvm92LREi
      armfWg2Bs/fp0y0bg5u69ugS1mo1Xt7eCPcMFcoVCq5fSyIzI+NBa202NLgAtGsnEpo5h73x
      uYhiGlFLO/DZ2BAOZpeff4kvuqwmKk1EFNOI2TKNvEuVQ92F/3qR4I+OkyqK5Ed/SredI3ll
      W3lTzOZgyDDCdHP5OalYX0aoirDgWdwfYX06E7b25NPofCJCvGsOhZ59kJAJ3/HwZ9GkiiLF
      Sd/z3MWZPL32AZ2l2kKmj15XFj5e/ys+FcaA4FXMH27c/dSTRdSyicy7MZPwlGLWja7dLHsH
      Rzp07Fjxt34L0gRym2gJY4PTNN8Botjy60jWLA7G3RLAEvfgxayb9Qdf7tXf2OzMO7h3711x
      3qHnSBa94F8pl5GzFlXExrR0D2bx2gVEb9qp33sgZTua8OlsXDu+LAanJe6jVrJxViTLNxo0
      1jgNC36dyv6dIWWhzGsme++X5IV+zdSychU2Pkz9+kO6rN1C1IPckrqETE/fx2tzbvDerhC6
      K8CY+wnAgXdZZr2GoxX3xDhc2rrSxtVNvwXp1Svk5eY8SE3NkoYVQEoUJ75fQI97uvMeCyJJ
      TNa/UPlODUW2pAeeQyezSLOLk0nVxeE0oLcvAadi9OHTz57itwBf7o+wPoq4iwaf6O1fYI1m
      NMYGXDxz8jAbxikruyLKcWy4dIMHGgcxOmS6lrVPv0u7z/91Nyy8EfcTgAGLWR/SvV7Bf9t7
      elJcXESBmSxhbGgaVgD5eeQYuhcGv4iQstC33i+wPTaes1+8xRD1BT581puBoUdq2VgDsFdj
      3ABeGU7O1CXCen5eFrP23m93+c429aMsZHrJXLZpMyvyvLwq4L50MZpX+GH8ZkJ9DYw25n4C
      uDgZLfR7EQQB34f96eRtitjcTUlTzAb16od/3F4O1frdxBKHTgMYMTOUb//Yx7gd33CkhtS6
      wwc54NdL76v36c+QYye4P8L6fjr1qP9/Yp/+Q9h98HAD739oXMj09H2vMe3iG3x371Pc6Pv5
      YAgyGQP8B9G1ew/TFtSINNF3gEFMnnOT+VPKw4frw4Sf3DKXFQf1KQ6umM768CRydAAFJIfv
      5pBNRwzj/ean3zY4r2HCzJOE/M84bAFcJxASvIWXQ3YSm6PTp9m/kGnr/Xh7mhEB1qsJhe46
      /kUGr5vG9C2xFWVnRB9gWeg3D/DNwIiQ6em7eTPUno/+VZW7Vvv9bDAEgb4D/OjRu08DZ9y8
      aWABKPAN/YWfx1/idV9nBEHA3nssYdFDmRCkT+H35HASPhiLt72AILjjvySdN79fWMmnD182
      hp5tBATBGd/XTzB48y5Cupc/G20ZrvmZMMVahnko9WmWFhEWvh6jIqxXFwrdcRJfn1uFy1fD
      8FDqbesz7/9weXIUXvW+H7WHTD/47mQ2RH1AkLKqYdDa72eDIgg81Lcfvfr5miDz5kmzC46r
      1QTyQbcIo4byJEzH1cuxRP15wmzX+iqVSsZ59a81nfQl2Cj2MbuW0ObNdf5Pfenc1YchI0Zi
      bV2noQezQxKAUYxmXRUjMdWOyrQQnF3aMHTME7R1c29qU0xGs3OBJJofYmkp58+c5tKF801t
      itEolSrGedX+LiP1ABK1Ishk9PbtT+Dgx5o89qixSNOhJRqcdh4ejHhybKNHnjMlkgAk6oSV
      tTUBg4cQOPixJolB2tA0053iJZo77Tw8aOPmxvmoU1y5HNsMo8NJgbEkTIxSqcR3oD+PjxyN
      g2Ptm1c3JsbKURoFkmgQRFHkemIC0efOktUMFtQY+yFMcoEkGgRBEOjQ0Yv2nh2blRBqQ+oB
      JExCU/cIKqWSsVIPINFUGPYIN69fJ/6qlhvXrjW7uUX/DwQgRRRTxe2yAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAbOElEQVR4nO2d2XMjyZ3fP1WF+wYBAiRBNsGrj5nunkMzkmZG8q52x7JWG7Gh2Ie1/eD1
      v+VHR6wfHKEIPzgc65XlGNurlVazGo26p0+S4H2CAHEV7rr8wCZ7Wk0QAAmgj8pPREeTqOQv
      f5nIb2Vm1e9XJVmWZSEQ2BT5VTsgELxKhiaAWq2GYRjDMi8QDIShCUCsrF4N//jFL/jVr39L
      23i5//XGMU/X9l/6PJvNYgGmofHVb3/N8vr22bHjbBa9Tx8q2U3uP3jKw4cPe/6bwn6GjYMS
      AI/vf8WXv/s97Wfnz2bpgNX1LR4ub770d5Zlcv/3X/LgaYb79+9TOMqimb376ui9qOBNoKC2
      SFp5fvmL/4Xp8ZN065TqBulUnO2dddq6j3ylDrVDHGgE4lP84z/8PX/57/4DjuIaVnSOG/NT
      PHnwNVtHKuW1xyz9+U+pb6+iOQKEnBq5o0MmF+6Qz+4RiydYffoIr8fPx59+xPZBnWlXkeWC
      A1d5i4jfxYMnGZJRP6WGTgs3fq8bp1ajZrn4/E8+BWBlbZ8PP1sE4MmTp3zvRz9lL/OArd0D
      xuNhsqpFpdqidLiBpvgw6jn80WnuzgbItvz8+DuL/Pqf/okvvv411777Oe1yGZes8+H3PsEh
      de4vsQd4yyhkd4nM3iZAne99/xMO8hXiLoPffPWEd+++g2S2yRXKHGb3yeZr3FxcYHpujulk
      DKfbQ71Wo9Vu8PjxEzIb6yQmpphPx/jqq0d4PB629vPEfTLfPFnn7gfvknn8FO9Yih//6CP+
      63/5b1ybnQZAKR+wV2zy5PFjcgdb7B8ecX1xHtk/QaO4xe/uPcLjcQNg6nU0xYvr2Wj8/Cd/
      yb1f/QNf/OpLTKcXxTyZCvRWjT88eIzX46astvjeR++hON20GzVarTbH+WMSE9PMLyxSL+1T
      bhgXDn4AaVhXgarVKl6vF0VRhmFe0IGdnR1mZmbI7u0QmZimfLjFYbnNQmqMlfVtEpMzHO1t
      4wuPEfFAqe0g7NTRnCGmk1EyTx/hCI7TKBxgeULMjgfYKbRwaRXaSgBTPeS3X37NT//937K3
      +pSF60vUG20S0QD//X/8gr/+65/RrBzTkNxsb24RCzgo1jTGwkGisRjlhglalXa1RNX0cPvG
      PNtP/4ARXWAuGQJg7ekDqrqThZk4j5c3WVqYpWWAplu0K0e0HUH8bplrMzNgWWyvr1DHi98l
      EQ262ck3ULe+IXb7RywkAxf2lxBAHzSbTdxuN5LU5bTyGtBsNvF4PAO3WykdU2vDZCL2wuet
      uoqGi4DP3bfNZr2Oy+tDvqBbNU1DkiQcjh5W7ZbFcaHA2FiMbl/Va7sEskyTZqv1rU9MqtVa
      z39vaG3a+mCvQmmaNlB752NRrzWubKXdbg/AlxNatSqaeXKeDEViLwz+ZqOJBbh9wUsNfgCP
      7+LBD6DrOqbZ4+5WkojFYtQb9XMPV6vVs59f202wZbR58M03TEyn8TtNmrqE2+GilM9SN2Su
      TY6xubVHYmIcS/IjGQ1MrUG5ZTER8bG2sko0vUjj+Ij45DXKRzsE4lOMR0NDdNricG+btuTB
      TYuG5cKn6BTKDdKzU2xubjM5M4t6fEC9UiLbdHJnMcXhUZGl6wsokgQY7GzvEQ46aZhOAk6T
      /bzK3Mw4B7kKqWSUfKHGTHqaq86t+aN9jvJlXA6Z+OQ1itkd3KEYHoeMQ7bQdZ18qUYyEsKh
      QGZjj/TCAl7XybDJ7m2zvpXl9t3r7O0ekk5fY2tzm4nJJAeHx6QmxymUSwQ8LnLFGnMzSdY3
      95mcjHFwmCednmV7Y5341CyxsP/K3V8sHlOrt1DMNpripaaWmJ0cZ2svx9zCHDvra3jCMbwu
      hXZDJVdqvr4zAEA8OUW9XOQgm2N8PEo+d0xLs/ArBhu7WdLpKYpH++QKNXJHWTKZDIV8nt2j
      YxYX0pSy24xNL3B0sEOz1aL9wowyeCxTJ7O+wXE+T73ZRNPaqLU2MzE39x6tkppb4GBnm2K1
      yUxqgmuzaTbXMrRrhZO18bdQq1V2NzbxhYIEw2HWMhkalSKHh/t4IvErD36ASrVO3G0Rmp5i
      P5NB8seoHOfI5484PMqzsZahUTnmYPeIaquFYRq0teezaqXeJDURZz2zitGu8fBJhqnZebKH
      h0xFFZ6s7uAJxmjUalQON7iX2WNxaZF2vU6rXuTBv9wnPn+D3P7uAFoDR4dZYtEQma1djvN5
      LAt2DrIspCd59OWXhGeXqJYL5PJ5jo5LJH3G6zsDICvUynk8gRhRfwSnohAIBnA6T85OTq/B
      6uoaLl+UZmkXpy9AIpmgLXmJeCU2drOMT6Y42FgmOp6kWT5GG/CS6DyfE+NxHN4wbkWj0dCg
      qbLedHJzYZrN1WXiyRSKZOLye6hkdognklRqDZxo1GpNFIdMIOinqjYJhkJsb26CM0QikaRS
      04hEg/j9g1nbBwJBPJaO5HQRS05wXDjA7Y8Q88uUNQd+t0KlaRD1+nE5HCiYNFtNHOjIigPJ
      0Cg2dCYnJsgVVOanE2yvrxKPRVk/yDM7PUEk4CVbMPEGw8QSMVZWVgkGXDhdPuLzcfZWHjM2
      PjmQ9kRicbxeH4mxCE5/BJcDvA5Yzmwx985NtleeoFkwOT6GpLfYKTSfb4JVVR3ozatGo4Hb
      7UaWhzfJmHrrZFCEL97pD4p6vY7X6+1rE1wulQlHwl3LlQo5ymodjz9EMh69ipvAia8+n+/K
      dv6YarnAcUnF6fYxOTHOqC4HtNttZFnubRN8DqbeZGV1g/jkNPFI8OxzcRWoD1RVJRAIvBFX
      gSqVCqHQEPc7I6bRaKAoCi6Xa6B2X+s9gEAwbIQABLZGCEBga4QABLZGCEBga4QABLbm9b0R
      JrANlmW9sgQqIQDBK6dWrVIqFjsed7lcBMPdbyZeBrEEEtiavgRgWSbFwjGaYdKoVWk025iG
      RqmsYpk6umHSbg0uDFcgGDZ9LYEa1QqNZpODoxX0lg6yhNcp4VQsKiUfmuJFb7W4sTA7LH8F
      goHSlwA8Xh/l7V2mpxNkizKKVqINLKZjPH28x+bRJt//9DNM08Q0TQzDeKueDmEYBrquvxGx
      QKe+vgl0S3SxLOuszKDb1JcAjnY2aJoyDd2Jpm7RdgUZ88ncf7hJOp1ibHaO/MEukcV5ZFlG
      UZS3KhhOURQcDscbIYBTX98EukUMS5J0Np4G3aa+rE3M3WDi2c/J2POQ3cmZ52WSkflB+CUQ
      jARxFUhga4QABLZGCEBga4QABLZGCEBga4QABLbmzbhQLDjDMAyqqnphmeBblAw/bIQA3jAs
      00StVC4sEwgGLzwueI5YAglsjRCAwNYIAQhsjRCAwNb0tQlu1Sr889cP+dMffMRXX97DcnlI
      hFwUyyqTU5O0ZB+1UpFbNxaG5a9AMFD6EoDbH2IyEQUkLAzAom05eP+9RZ482mMju8JnP/yh
      yAcYsg+9lBH5AL3RlwBq5QI7O7sEAz5M2YVsmiiSzr37GSanJvBPpNjd3OCdW9dFPsCw6OGE
      ctrvIh+gO31Z84fH+Pzzfw3AVKpD2mPy6o/2FghGhdgEC2yNEIDA1ggBCGyNEIDA1ggBCGyN
      EIDA1ggBCGyNEIDA1ggBCGyNEIDA1ggBCGyNEIDA1vSXD1Cv8PXDVT757nfILD9C9kbwSW0O
      8yXS6Wlako9qIcfCfHpI7goEg6UvAbi8QaIhH+gVdg8qjMUVdLeD926nefp4j61cnu9/8qnI
      BxiyD72UEfkAvdGXAPR2k0qlgtpMEQ55UUwdwzDZ3tzHH/GzNBbnYH+P8NKcyAcYFiIfYKB1
      92XNsizS6TksHNy6uYRuyfg8Dspqg0jIh2HJGLo2UAcFgmHS3xLI4yPh8b30eTTiPDPmUNwD
      cUwgGAXiKpDA1ggBCGyNEIDA1ggBCGyNEIDA1ggBCGyNEIDA1ggBCGyNEIDA1ggBCGyNEIDA
      1vQlAL3d5N6DRwC0a2UerWxQPNrnmwePaNRKFKstdvf2huKoQDAM+ostlWRcDgnLstjcPcAy
      IV/Wub2UZCVzwF6hyJ2774l8gCH70EsZkQ/QG30JwOF0ocgSZkul1miTO84zmZygqtZwuJ2k
      pqaolCskIn6RDzAsRD7AQOvu+wUZum6SLWt88P5dVFXF7ZTYPSwyl56mbTlpN6q8Ped8wdtO
      3y/IeDc8dvZ78NkLmefTAQC8gNcVHpx3AsGQEVeBBLZGCEBga4QABLZGCEBga4QABLZGCEBg
      a4QABLZGCEBgazoKwDR0dN3AfItieQSCP6bjneD/8/c/J3TtNkF/mJuL10bpk0AwMjrOAF6f
      nwdf/w6XLzhKfwSCkdJxBrAkJ+Gg/4XwW61Z4/7jDB99eIe15WUapoNk2MN+rsj8XIoWPqrF
      POnZmZE4LxBclY4CSEymcHr81KoqEAdAcbrx+1yAxPS1GVY39ijWWty9leLpcpbd/DEffvSx
      yAcYsg+9lBH5AL3RUQDtZoNyTeODd5Pf+lTC0HV0XWN5eY2lW7fYXs+QzxXx+D3MBuc4zuUY
      C86IfIBhIfIBBlp3R2vZ/DHT03M4lOdfdqtRxev1cVysEAoFyWZzLCzOk82Xmb0WRbMU9HZz
      oA4KBMOkowDMVpX73zzAHU4SCXgB8AbCLASexfuPx8/KpiY9ALgBt9M/PG8FggHTce4xtBbz
      N65TL5dG6Y9AMFI6zgCx8SSPHzzgz37ys1H688pQKxVq1WrH426PB4fTOUKPBKOg8xLIklm8
      eYfkmD2WNKZpXniFwWEYQgBvIR2XQMFQiIP1hyxvHY3SH4FgpHScAYr5I979+AeMhV9+KZ5A
      8LbQcQao1atknnzD7mF+lP4IBCPl3Bng+HAHh28MGQdTU8nziggEbwXnzgArG1t85851dvMq
      iYg9NsECe3KuALyyzv/84re4zAZbB8ej9kkgGBnnLoEW33mfqbk2AMFwaKQOCQSj5FwBHO1t
      s7GXwzRN3nn/u6TGxeMOBW8n5y6B5m/exaxm2d3d4rjSOPu8Va/wz//ye8DkyYN7PF5e43Bn
      g3t/+AOlYo5sqcba+uaIXBcIrk7H+wCpues0jHUc0vNYbZc3SDTkA62CI5hC0cqUmgbv3U7z
      9PEeW7k83//k0zcyH6CXmHSRDzAcXrt8AMsy8QQi/Ju/+AmHx7Wzz/V2k0qlgtqaolHOgizh
      dUpsb+7jj/hZGotzsL9HeGnujcsH6CUmXeQDDIfXLh/g+GCL//3LXzI2Psm/+rMfn31uWRbp
      9BwWTpYWZ7EUNx6nRFltEAn5MCwZQ9cG6qBAMEzOFUB8ao7FdApTclIolklETsIhXB4fCc/L
      oRHRiPPMmENxD89bgWDAdJx73C43um7i8XpG6Y9AMFLOnQEymWU+/dMfY1kgy69wvSsQDJlz
      BbD25D6rq+sA3PnOJ0wnIiN1SiAYFecK4OPP/pyxsdiofREIRs65ewAx+AV2QTwdWmBrhAAE
      tkYIQGBr3ox75X+EqetYZueQAEmRkd+QEAzBq+WNFEC72sBsdw65cPg8uAIimV/QHbEEEtia
      y80AlsnKk8dYrgCJkIudbJGl+RRNy0utnGc6lRqwmwLBcLjkEkhHrTaxXCBZbm4vJVnJHLBX
      KHLn7ntDzwfoZtOyrL7jxt/GfABN04GL++qVhnY/47XLB+iK1sQRiOHQKmi6TlWt4XA7SU1N
      USlXSET8Q80H0CXpwq9VkqS+48bfxnyA//uLh/zm/y13LHfrzjR/87efDdK7S/Ha5QN0xRkk
      ESpguaaJh9zsHhaZS0/Ttpy0G9Uu5xyB4PXhcgKQJCan02e/zqcDAHgBr0sk0AveHMRVIIGt
      EQIQ2BohAIGtEQIQ2BohAIGtEQIQ2BohAIGtEQIQ2BohAIGteSPzAV41//k/fUGz0Tkf4ac/
      +5Brc+Mj9Ojq9BK0+DoEzg0aIYBLcHRQplFvdzzear55z0ctHNcujLMLhT24XG/fcLl0i3KH
      u9R1B+MhN9uHBRZmJ2hZLprVMvF4fJA+2oJavoje6iwqTyiAOyje1zZoLicAs8nyyhapuXl2
      9o9ITwbZ2Nij2tYZT0xgWdbZv26x3pej+3Tdb71dlwB9tOcy7dYaLbRGs+Nxh8eF0/T2tFQ5
      6/8e6u3Vz+F9lz3kd8DQxtMlM8IMApEEhlpCUxQUh4JlmrRarRfWiadOD5yuY3Xw9X77S+i1
      7EDrt+h5UJ/52dWH5+3patcafJvOTPdw8jktN2gfLicAxU88LNMiyGzIzfJWkevzKSYtD41K
      ASTphSSGQaN12YydJq/0Q7cNXj/tkS9RP132l6dtsno4A8qyjCzLPWxan/spcbEIJPkSbeqR
      XhJihjWeLr0HmJ5dOPv5dvTkiocLCHnFi7UFbw7iPoDA1ggBCGyNEIDA1ggBCGyNEIDA1ggB
      CGyNEIDA1ggBCGyNEIDA1ggBCGyNEIDA1lw6FkhvVlnfLzAR8bB1UODGfIqG5aFROWZiYmKQ
      Pr6xGG0NrVrveFySZdyR4Ag9EvwxlxSAxeb2Li0dDvNNbs1FyazvcVyrMT+/hGmaQ40f7xbm
      e/os//5Mdrd5+s6DbpjmSf2mYWDqF5SXn9vrpX7DMHrq09P3M3QPHba+VX83m/33aa/0+n4A
      SZIG7sOlBGA0VYqVBsVykamJSbS2juyQ8ft8z3ICTs5qp2GsA6eH0OF+6+0aDs3zkOhebPXi
      w6nNk5+7h2NLkoTUR/30EA59Vr90sQiG9l3SQ67xs34fhg+XEoDiCfHxRx9QLJXwKJykRKZT
      NC03rVr5LB+g1wHTP907YeD19jionxVFlmXMrn5+q396+F5lWcbs4Qx4JpbuJnvup9M2DYNe
      ThSn5Qbtw5WynKORCAA3gif/B4CAJ3ZlpwSCUSGuAglsjRCAwNYIAQhsjRCAwNYIAQhsjRCA
      wNYIAQhsjRCAwNYM/XG/O5t59AviYRITEfwB97DdEAjOZegC+Pnf/Qa10uh4/N/+x8+4eXt6
      2G4IBOcilkACW3NJAVhk97fZPcjRbqhkNrYx2g3qLZ1SqTRYDwWCIXLpfABvYIz89iZqSWF6
      3M/G1i4aCh5vgHC490dYD+NR4gzJZj92B12u37LDsDm0Pu3j+OvxeHQk8ofbJFKzlPKH+ANe
      9MMaB4Uc77x754XkkW5PtDeN3pJMvk2vySP90EtShmEYPdk1nrXdNC8ua72QkNKtTSc2jR4S
      Yk79NPvop+4JMSZDyofp/sj3byVXvR7h0GabcqWJoRSIRQI8XM2xNJ8iObdAvZRDkoNnz3Lv
      FpWuKDIOR39u6JJ08bPsJalvm708o15RlJ7sKvJJm3T94i9W4rmf3d9P8KyfejgDKoqCoijI
      Pbzz4Hn9F5uW5f6/p17ppe9Px9OgfbicNdnNBx99ePbr2PgkAF4g6k8Nwi+BYCSIq0ACWyME
      ILA1QgACWyMEILA1QgACWyMEILA1Qw+GEwgGSS5bRtM635GLRP34/L1HFwsBCN4ofv53vyGX
      rXQ8/ld/8zEffDzfs70rL4Es06DeaGKZJoZpoev6VU0KBCPjyjPA+uoyut7GH4qiKV6a1Rq3
      rs8NwjfBa4hlmJgXneQkCcXlHJ1DV+TKAjBlFzduTPLk0R4b2TU+/cEPL2fHtDCMi2NnnE7l
      UrYFg8PQNNqVWsfjkiLjjUVG6NHVuLIAfC6Je99scO3aFJGZWbK7W4SvL/ZtR9MM1Eqz43FJ
      kojF/X3ZtEyTZrl6YRlPONDTE5cFbydXFkBqdoHU7PPfJ8denxc+mIZJNVe4sIwr6EMRAhg4
      lmV1fZK1rChDe+R6r0jWs0B0VVUHmmzQaDSQ5WUKefXCWPtQxIfXO4eixDCMzvVL0knotGma
      SNbF8fOSfBIuLUkSRlu70E/F5cSyrK4v9JAkiXa7jaKsdG1TOOLH451HUaJYXZZ1knIiPlM3
      LoyLlx3K2SPau11ocDgcqOoKhl6kXmt1LOf2OAmFx3G5ljB088IQc0WRsCwLCeni+H2Jsxm1
      174HLsyzkCQJ0zTR9SeoZfXChywEQ158/lkcjuSFdZ9yNgMEg4M9c5/EeOeYme0mqhYOxzwu
      V7irzdOB2ktShGmaPSdP9FpWVVVk+Qj/bLeSLZzOBZzOV9cmTavi83W+XHjqpyR58XpDPdns
      tf7TQd3L2b1Xm41Gg3Y7TyjULSunhcMxg8vVW5tei7lfll/sKFVVKZfLL5Xr/IIEg3K5jKo+
      35z1kzk0jBc/dPryy+UyVVU9Sz7p56UPo/CzWVNRyxVa55zlO9V/Xpt6XdoMp00v2jwdT+ed
      ikd0I8xi9ckehtOD22FhITGfjncsrVZUyoUjtk2Zpdt38Cgvd6bZrvN4ZYNEIsZRLofDGSQU
      8BAMnr9RXn36EI8/TKlcIhRNMJs6f4o82t+hUG0TDropF0vEpuYYj5xn02Ll8S6Wx4dLNi9s
      087GKriDNCsFCmqL2VQSXyB4bq7c4f4utZaB1arSNB3cunkdRX65pKU3+ObhKrNzM2xv7uIN
      hlmav3Zu/aVckZXtCqGwl5tTXtZVJ/NJz7llayWVttHiYG+bZHyKVGLs3HLb6yvI3hD10jGl
      msbMVAJ/4PxVxEbmKU5fiOLREb7oOAuz5ydNFY/22c9XSSZCZA/zjE1MMxk//4rSxso+NcuB
      3y31NJ7UUp6dLYn0jVsE3M+H/WhmAMui1rS4Ph+jWKyRO774yoxaUfH4wyxOBTgstc83aWh4
      wzHUisqtW9dxKSd/1wlTdjHm95BIzdKsvTy7nOJ0OjHaDYo1jes3rlPKHXVok0m9LbGUHuva
      poZmMhlxIwfHGR8LoaqVjuvtWr3B7OwMistHxCfT0DqstyUZt9tJTS0TGJvA0jo/e2l/X+Xu
      +zPUKnWMZpNCrfMeolFR0VGYX7qBWsp3LNfULSZCDhzhSeLRIJVK5+VW25SZiIWIxKfQW537
      yeF0gtGkVGuTnl9ELXSuv1zTeWdpvOfx5PIGWZoZ46j04ls7RyMASSYx5iazWSToUUC+eOKJ
      j8fxuRU2CxbXxs6P65AcHsajYWamEqysbhII+bEuaE4ykQAsttYzxBJTHcvJsozD5cFhtlhe
      WSM1O9OhTQrxiJO17RIBt4KsdL75k0gkcXjDyI0iluLCMju/EiwWH8chS5SPj2jhxe/qcO/D
      AiTw+rwc7GwSiHY+A84txHj8YI+piRAPNlRSUVfHsqHxOJFoiP3MKhNT588oZ23yjUEtBw73
      hfnEJ30Pe1vrhMc6b04lWUZ2unFLOpnVDBPTHfoemEz4eLp2TMTvxLAuHsbx8ThBn4v1bJ1r
      4y/OUv8fOcZYLUu4hN0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='149' name='Sheet 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      CxVQbzI9138AViTmnGLBRzwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
